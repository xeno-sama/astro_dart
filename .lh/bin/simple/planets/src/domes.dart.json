{
    "sourceFile": "bin/simple/planets/src/domes.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1642124596183,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1642127223243,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n   var e = radians(ecl); // склонение эклиптики в радианах\n \n   // формула для МС\n   var mc = degrees(atan(tan(pv) / cos(e)));\n-  var ic, v, vi, ds, viii, ix;\n+  double ic, v, vi, ds, viii, ix;\n   // формула для AS\n   var asc =\n       deg_360(degrees(atan(cos(pv) / -(tan(lat) * sin(e) + sin(pv) * cos(e)))));\n \n@@ -30,9 +30,9 @@\n   var ii = degrees(\n       atan(cos(pv + c / 3) / -(tan(lat) * sin(e) + sin(pv + c / 3) * cos(e))));\n   var iii = degrees(atan(cos(pv + 2 * c / 3) /\n       -(tan(lat) * sin(e) + sin(pv + 2 * c / 3) * cos(e))));\n-  var xi = degrees(atan(cos(pv - 2 * c / 3) /\n+  double xi = degrees(atan(cos(pv - 2 * c / 3) /\n       -(tan(lat) * sin(e) + sin(pv - 2 * c / 3) * cos(e))));\n   var xii = degrees(\n       atan(cos(pv - c / 3) / -(tan(lat) * sin(e) + sin(pv - c / 3) * cos(e))));\n \n"
                },
                {
                    "date": 1642127311793,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n   var e = radians(ecl); // склонение эклиптики в радианах\n \n   // формула для МС\n   var mc = degrees(atan(tan(pv) / cos(e)));\n-  double ic, v, vi, ds, viii, ix;\n+  double ic = 0, v = 0, vi = 0, ds = 0, viii = 0, ix = 0;\n   // формула для AS\n   var asc =\n       deg_360(degrees(atan(cos(pv) / -(tan(lat) * sin(e) + sin(pv) * cos(e)))));\n \n"
                },
                {
                    "date": 1642127527267,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,8 +2,10 @@\n \n import 'dart:math';\n import 'func.dart';\n \n+// ignore_for_file: non_constant_identifier_names, prefer_typing_uninitialized_variables\n+\n List<double> domes(\n     int Y, int M, int D, int h, int m, double LAT, double LON, double d) {\n   var ecl = 23.4393 - 3.563E-7 * d;\n \n@@ -18,9 +20,9 @@\n   var e = radians(ecl); // склонение эклиптики в радианах\n \n   // формула для МС\n   var mc = degrees(atan(tan(pv) / cos(e)));\n-  double ic = 0, v = 0, vi = 0, ds = 0, viii = 0, ix = 0;\n+  var ic, v, vi, ds, viii, ix;\n   // формула для AS\n   var asc =\n       deg_360(degrees(atan(cos(pv) / -(tan(lat) * sin(e) + sin(pv) * cos(e)))));\n \n@@ -30,9 +32,9 @@\n   var ii = degrees(\n       atan(cos(pv + c / 3) / -(tan(lat) * sin(e) + sin(pv + c / 3) * cos(e))));\n   var iii = degrees(atan(cos(pv + 2 * c / 3) /\n       -(tan(lat) * sin(e) + sin(pv + 2 * c / 3) * cos(e))));\n-  double xi = degrees(atan(cos(pv - 2 * c / 3) /\n+  var xi = degrees(atan(cos(pv - 2 * c / 3) /\n       -(tan(lat) * sin(e) + sin(pv - 2 * c / 3) * cos(e))));\n   var xii = degrees(\n       atan(cos(pv - c / 3) / -(tan(lat) * sin(e) + sin(pv - c / 3) * cos(e))));\n \n"
                },
                {
                    "date": 1642127553783,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,10 +2,8 @@\n \n import 'dart:math';\n import 'func.dart';\n \n-// ignore_for_file: non_constant_identifier_names, prefer_typing_uninitialized_variables\n-\n List<double> domes(\n     int Y, int M, int D, int h, int m, double LAT, double LON, double d) {\n   var ecl = 23.4393 - 3.563E-7 * d;\n \n@@ -20,9 +18,9 @@\n   var e = radians(ecl); // склонение эклиптики в радианах\n \n   // формула для МС\n   var mc = degrees(atan(tan(pv) / cos(e)));\n-  var ic, v, vi, ds, viii, ix;\n+  double ic = 0, v = 0, vi = 0, ds = 0, viii = 0, ix = 0;\n   // формула для AS\n   var asc =\n       deg_360(degrees(atan(cos(pv) / -(tan(lat) * sin(e) + sin(pv) * cos(e)))));\n \n@@ -32,9 +30,9 @@\n   var ii = degrees(\n       atan(cos(pv + c / 3) / -(tan(lat) * sin(e) + sin(pv + c / 3) * cos(e))));\n   var iii = degrees(atan(cos(pv + 2 * c / 3) /\n       -(tan(lat) * sin(e) + sin(pv + 2 * c / 3) * cos(e))));\n-  var xi = degrees(atan(cos(pv - 2 * c / 3) /\n+  double xi = degrees(atan(cos(pv - 2 * c / 3) /\n       -(tan(lat) * sin(e) + sin(pv - 2 * c / 3) * cos(e))));\n   var xii = degrees(\n       atan(cos(pv - c / 3) / -(tan(lat) * sin(e) + sin(pv - c / 3) * cos(e))));\n \n"
                }
            ],
            "date": 1642124596183,
            "name": "Commit-0",
            "content": "// ignore_for_file: non_constant_identifier_names, prefer_typing_uninitialized_variables\n\nimport 'dart:math';\nimport 'func.dart';\n\nList<double> domes(\n    int Y, int M, int D, int h, int m, double LAT, double LON, double d) {\n  var ecl = 23.4393 - 3.563E-7 * d;\n\n  var w_sun = 282.9404 + 4.70935E-5 * d;\n  var M_sun = deg_360(356.0470 + 0.9856002585 * d);\n  var L_sun = deg_360(w_sun + M_sun); // Звездное время\n\n  var RA = localSidTime(h, m, L_sun, LON); // прямое восхождение\n\n  var pv = radians(RA);\n  var lat = radians(LAT);\n  var e = radians(ecl); // склонение эклиптики в радианах\n\n  // формула для МС\n  var mc = degrees(atan(tan(pv) / cos(e)));\n  var ic, v, vi, ds, viii, ix;\n  // формула для AS\n  var asc =\n      deg_360(degrees(atan(cos(pv) / -(tan(lat) * sin(e) + sin(pv) * cos(e)))));\n\n  // вспомогательный угол для куспидов\n  var c = acos(-tan(e) * sin(pv) * tan(lat));\n\n  var ii = degrees(\n      atan(cos(pv + c / 3) / -(tan(lat) * sin(e) + sin(pv + c / 3) * cos(e))));\n  var iii = degrees(atan(cos(pv + 2 * c / 3) /\n      -(tan(lat) * sin(e) + sin(pv + 2 * c / 3) * cos(e))));\n  var xi = degrees(atan(cos(pv - 2 * c / 3) /\n      -(tan(lat) * sin(e) + sin(pv - 2 * c / 3) * cos(e))));\n  var xii = degrees(\n      atan(cos(pv - c / 3) / -(tan(lat) * sin(e) + sin(pv - c / 3) * cos(e))));\n\n  mc < 0 ? mc += 180 : mc;\n  // МС должен быть в пределах 10гр от Pv и положительным\n  if ((mc - pv).abs() > 10) {\n    mc += 180;\n  }\n\n  mc < 180 ? ic = mc + 180 : mc; // IC отстоит на 180гр\n  mc >= 180 ? ic = mc - 180 : mc;\n\n  asc < 0 ? asc += 180 : asc;\n  asc > 360 ? asc -= 360 : asc;\n\n  0 < asc && asc < mc ? asc += 180 : asc;\n\n  asc < 180 ? ds = asc + 180 : asc;\n  asc >= 180 ? ds = asc - 180 : asc;\n\n  while (ii < asc) {\n    ii += 180;\n    ii > 360 ? ii = ii - 360 : ii;\n    ii > 180 ? viii = ii - 180 : viii = ii + 180;\n  }\n\n  while (iii < asc) {\n    iii += 180;\n    iii > 360 ? iii = iii - 360 : iii;\n    iii > 180 ? ix = iii - 180 : ix = iii + 180;\n  }\n\n  while (xi < mc) {\n    xi += 180;\n    xi > 360 ? xi = xi - 360 : xi;\n    xi > 180 ? v = xi - 180 : v = xi + 180;\n  }\n\n  while (xii < mc) {\n    xii += 180;\n    xii > 360 ? xii = xii - 360 : xii;\n    xii > 180 ? vi = xii - 180 : vi = xii + 180;\n  }\n\n  return [asc, ii, iii, ic, v, vi, ds, viii, ix, mc, xi, xii];\n}\n"
        }
    ]
}