{
    "sourceFile": "vsop/moon.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 16,
            "patches": [
                {
                    "date": 1641624990956,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1641631856561,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,16 +1,18 @@\n-// import math\n+// ignore_for_file: non_constant_identifier_names, prefer_typing_uninitialized_variables\n \n-// # BEGIN CalcMoon\n+import 'dart:math';\n+import '../simple/defs/func.dart';\n \n-// _PI2 = 2.0 * math.pi\n-// KM_PER_AU = 1.4959787069098932e+8\n-// _EARTH_FLATTENING = 0.996647180302104\n-// _EARTH_EQUATORIAL_RADIUS_KM = 6378.1366\n-// _EARTH_POLAR_RADIUS_KM = _EARTH_EQUATORIAL_RADIUS_KM * _EARTH_FLATTENING\n-// _EARTH_EQUATORIAL_RADIUS_AU = _EARTH_EQUATORIAL_RADIUS_KM / KM_PER_AU\n-// _ARC = 3600.0 * 180.0 / math.pi \n \n+// _PI2 = 2.0 * math.pi;\n+// KM_PER_AU = 1.4959787069098932e+8;\n+// _EARTH_FLATTENING = 0.996647180302104;\n+// _EARTH_EQUATORIAL_RADIUS_KM = 6378.1366;\n+// _EARTH_POLAR_RADIUS_KM = _EARTH_EQUATORIAL_RADIUS_KM * _EARTH_FLATTENING;\n+// _EARTH_EQUATORIAL_RADIUS_AU = _EARTH_EQUATORIAL_RADIUS_KM / KM_PER_AU;\n+// _ARC = 3600.0 * 180.0 / math.pi ;\n+\n // def _Array1(xmin, xmax):\n //     return dict((key, 0j) for key in range(xmin, 1+xmax))\n \n // def _Array2(xmin, xmax, ymin, ymax):\n@@ -25,29 +27,29 @@\n // def _CalcMoon(time):\n //     # global _CalcMoonCount\n //     # _CalcMoonCount += 1\n \n-//     T = time.tt / 36525\n-//     ex = _Array2(-6, 6, 1, 4)\n+//     T = time.tt / 36525;\n+//     ex = _Array2(-6, 6, 1, 4);\n \n //     def Sine(phi):\n //         return math.sin(_PI2 * phi)\n \n //     def Frac(x):\n //         return x - math.floor(x)\n \n-//     T2 = T*T\n-//     DLAM = 0\n-//     DS = 0\n-//     GAM1C = 0\n-//     SINPI = 3422.7000\n-//     S1 = Sine(0.19833+0.05611*T)\n-//     S2 = Sine(0.27869+0.04508*T)\n-//     S3 = Sine(0.16827-0.36903*T)\n-//     S4 = Sine(0.34734-5.37261*T)\n-//     S5 = Sine(0.10498-5.37899*T)\n-//     S6 = Sine(0.42681-0.41855*T)\n-//     S7 = Sine(0.14943-5.37511*T)\n+//     T2 = T*T;\n+//     DLAM = 0;\n+//     DS = 0;\n+//     GAM1C = 0;\n+//     SINPI = 3422.7000;\n+//     S1 = Sine(0.19833+0.05611*T);\n+//     S2 = Sine(0.27869+0.04508*T);\n+//     S3 = Sine(0.16827-0.36903*T);\n+//     S4 = Sine(0.34734-5.37261*T);\n+//     S5 = Sine(0.10498-5.37899*T);\n+//     S6 = Sine(0.42681-0.41855*T);\n+//     S7 = Sine(0.14943-5.37511*T);\n //     DL0 = 0.84*S1+0.31*S2+14.27*S3+ 7.26*S4+ 0.28*S5+0.24*S6\n //     DL  = 2.94*S1+0.31*S2+14.27*S3+ 9.34*S4+ 1.12*S5+0.83*S6\n //     DLS =-6.40*S1                                   -1.89*S6\n //     DF  = 0.21*S1+0.31*S2+14.27*S3-88.70*S4-15.30*S5+0.24*S6-1.86*S7\n"
                },
                {
                    "date": 1641632384611,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,8 +2,14 @@\n \n import 'dart:math';\n import '../simple/defs/func.dart';\n \n+void main(List<String> args) {\n+  var mc = 123;\n+  var ic;\n+  mc < 180 ? ic = mc + 180 : mc;\n+  print('$ic $mc');\n+}\n \n // _PI2 = 2.0 * math.pi;\n // KM_PER_AU = 1.4959787069098932e+8;\n // _EARTH_FLATTENING = 0.996647180302104;\n"
                },
                {
                    "date": 1641636534257,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,16 +1,16 @@\n // ignore_for_file: non_constant_identifier_names, prefer_typing_uninitialized_variables\n \n-import 'dart:math';\n-import '../simple/defs/func.dart';\n+// import 'dart:math';\n \n-void main(List<String> args) {\n-  var mc = 123;\n-  var ic;\n-  mc < 180 ? ic = mc + 180 : mc;\n-  print('$ic $mc');\n-}\n \n+// void main(List<String> args) {\n+//   var mc = 123;\n+//   var ic;\n+//   mc < 180 ? ic = mc + 180 : mc;\n+//   print('$ic $mc');\n+// }\n+\n // _PI2 = 2.0 * math.pi;\n // KM_PER_AU = 1.4959787069098932e+8;\n // _EARTH_FLATTENING = 0.996647180302104;\n // _EARTH_EQUATORIAL_RADIUS_KM = 6378.1366;\n"
                },
                {
                    "date": 1641640174623,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,23 +1,19 @@\n // ignore_for_file: non_constant_identifier_names, prefer_typing_uninitialized_variables\n \n-// import 'dart:math';\n+import 'dart:math';\n \n+void main() {\n+  var _PI2 = 2.0 * pi;\n+  var KM_PER_AU = 1.4959787069098932e+8;\n+  var _EARTH_FLATTENING = 0.996647180302104;\n+  var _EARTH_EQUATORIAL_RADIUS_KM = 6378.1366;\n+  var _EARTH_POLAR_RADIUS_KM = _EARTH_EQUATORIAL_RADIUS_KM * _EARTH_FLATTENING;\n+  var _EARTH_EQUATORIAL_RADIUS_AU = _EARTH_EQUATORIAL_RADIUS_KM / KM_PER_AU;\n+  var _ARC = 3600.0 * 180.0 / pi;\n+}\n \n-// void main(List<String> args) {\n-//   var mc = 123;\n-//   var ic;\n-//   mc < 180 ? ic = mc + 180 : mc;\n-//   print('$ic $mc');\n-// }\n \n-// _PI2 = 2.0 * math.pi;\n-// KM_PER_AU = 1.4959787069098932e+8;\n-// _EARTH_FLATTENING = 0.996647180302104;\n-// _EARTH_EQUATORIAL_RADIUS_KM = 6378.1366;\n-// _EARTH_POLAR_RADIUS_KM = _EARTH_EQUATORIAL_RADIUS_KM * _EARTH_FLATTENING;\n-// _EARTH_EQUATORIAL_RADIUS_AU = _EARTH_EQUATORIAL_RADIUS_KM / KM_PER_AU;\n-// _ARC = 3600.0 * 180.0 / math.pi ;\n \n // def _Array1(xmin, xmax):\n //     return dict((key, 0j) for key in range(xmin, 1+xmax))\n \n"
                },
                {
                    "date": 1641647125949,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-// ignore_for_file: non_constant_identifier_names, prefer_typing_uninitialized_variables\n+// ignore_for_file: non_constant_identifier_names, prefer_typing_uninitialized_variables, camel_case_types, unused_local_variable, unused_element\n \n import 'dart:math';\n \n void main() {\n@@ -10,64 +10,67 @@\n   var _EARTH_POLAR_RADIUS_KM = _EARTH_EQUATORIAL_RADIUS_KM * _EARTH_FLATTENING;\n   var _EARTH_EQUATORIAL_RADIUS_AU = _EARTH_EQUATORIAL_RADIUS_KM / KM_PER_AU;\n   var _ARC = 3600.0 * 180.0 / pi;\n }\n-\n-\n-\n // def _Array1(xmin, xmax):\n //     return dict((key, 0j) for key in range(xmin, 1+xmax))\n \n // def _Array2(xmin, xmax, ymin, ymax):\n //     return dict((key, _Array1(ymin, ymax)) for key in range(xmin, 1+xmax))\n \n-// class _moonpos:\n-//     def __init__(self, lon, lat, dist):\n-//         self.geo_eclip_lon = lon\n-//         self.geo_eclip_lat = lat\n-//         self.distance_au = dist\n+class _moonpos{\n+  double lon, lat, dist;\n+  _moonpos(this.lon, this.lat, this.dist) {\n+    var geo_eclip_lon = lon;\n+    var geo_eclip_lat = lat;\n+    var distance_au = dist;\n+  }\n \n-// def _CalcMoon(time):\n-//     # global _CalcMoonCount\n-//     # _CalcMoonCount += 1\n+  dynamic _CalcMoon(time) {\n+    var _CalcMoonCount;\n+    _CalcMoonCount += 1;\n \n-//     T = time.tt / 36525;\n-//     ex = _Array2(-6, 6, 1, 4);\n \n+  }\n+  \n+\n+//     var T = time.tt / 36525;\n+//     var ex = _Array2(-6, 6, 1, 4);\n+\n //     def Sine(phi):\n //         return math.sin(_PI2 * phi)\n \n //     def Frac(x):\n //         return x - math.floor(x)\n \n-//     T2 = T*T;\n-//     DLAM = 0;\n-//     DS = 0;\n-//     GAM1C = 0;\n-//     SINPI = 3422.7000;\n-//     S1 = Sine(0.19833+0.05611*T);\n-//     S2 = Sine(0.27869+0.04508*T);\n-//     S3 = Sine(0.16827-0.36903*T);\n-//     S4 = Sine(0.34734-5.37261*T);\n-//     S5 = Sine(0.10498-5.37899*T);\n-//     S6 = Sine(0.42681-0.41855*T);\n-//     S7 = Sine(0.14943-5.37511*T);\n-//     DL0 = 0.84*S1+0.31*S2+14.27*S3+ 7.26*S4+ 0.28*S5+0.24*S6\n-//     DL  = 2.94*S1+0.31*S2+14.27*S3+ 9.34*S4+ 1.12*S5+0.83*S6\n-//     DLS =-6.40*S1                                   -1.89*S6\n-//     DF  = 0.21*S1+0.31*S2+14.27*S3-88.70*S4-15.30*S5+0.24*S6-1.86*S7\n-//     DD  = DL0-DLS\n-//     DGAM  = ((-3332E-9 * Sine(0.59734-5.37261*T)\n+//     var T2 = T*T;\n+//     var DLAM = 0;\n+//     var DS = 0;\n+//     var GAM1C = 0;\n+//     var SINPI = 3422.7000;\n+//     var S1 = Sine(0.19833+0.05611*T);\n+//     var S2 = Sine(0.27869+0.04508*T);\n+//     var S3 = Sine(0.16827-0.36903*T);\n+//     var S4 = Sine(0.34734-5.37261*T);\n+//     var S5 = Sine(0.10498-5.37899*T);\n+//     var S6 = Sine(0.42681-0.41855*T);\n+//     var S7 = Sine(0.14943-5.37511*T);\n+//     var DL0 = 0.84*S1+0.31*S2+14.27*S3+ 7.26*S4+ 0.28*S5+0.24*S6\n+//     var DL  = 2.94*S1+0.31*S2+14.27*S3+ 9.34*S4+ 1.12*S5+0.83*S6\n+//     var DLS =-6.40*S1                                   -1.89*S6\n+//     var DF  = 0.21*S1+0.31*S2+14.27*S3-88.70*S4-15.30*S5+0.24*S6-1.86*S7\n+//     var DD  = DL0-DLS\n+//     var DGAM  = ((-3332E-9 * Sine(0.59734-5.37261*T)\n //                -539E-9 * Sine(0.35498-5.37899*T)\n //                 -64E-9 * Sine(0.39943-5.37511*T)))\n \n-//     L0 = _PI2*Frac(0.60643382+1336.85522467*T-0.00000313*T2) + DL0/_ARC\n-//     L  = _PI2*Frac(0.37489701+1325.55240982*T+0.00002565*T2) + DL /_ARC\n-//     LS = _PI2*Frac(0.99312619+  99.99735956*T-0.00000044*T2) + DLS/_ARC\n-//     F  = _PI2*Frac(0.25909118+1342.22782980*T-0.00000892*T2) + DF /_ARC\n-//     D  = _PI2*Frac(0.82736186+1236.85308708*T-0.00000397*T2) + DD /_ARC\n+//     var L0 = _PI2*Frac(0.60643382+1336.85522467*T-0.00000313*T2) + DL0/_ARC\n+//     var L  = _PI2*Frac(0.37489701+1325.55240982*T+0.00002565*T2) + DL /_ARC\n+//     var LS = _PI2*Frac(0.99312619+  99.99735956*T-0.00000044*T2) + DLS/_ARC\n+//     var F  = _PI2*Frac(0.25909118+1342.22782980*T-0.00000892*T2) + DF /_ARC\n+//     var D  = _PI2*Frac(0.82736186+1236.85308708*T-0.00000397*T2) + DD /_ARC\n \n-//     I = 1\n+//     var I = 1\n //     while I <= 4:\n //         if I == 1:\n //             ARG=L; MAX=4; FAC=1.000002208\n //         elif I == 2:\n@@ -76,224 +79,224 @@\n //             ARG=F; MAX=4; FAC=1.000002708+139.978*DGAM\n //         else:\n //             ARG=D; MAX=6; FAC=1.0\n \n-//         ex[0][I] = complex(1, 0)\n-//         ex[1][I] = complex(FAC * math.cos(ARG), FAC * math.sin(ARG))\n+//         var ex[0][I] = complex(1, 0)\n+//         var ex[1][I] = complex(FAC * math.cos(ARG), FAC * math.sin(ARG))\n \n-//         J = 2\n+//         var J = 2\n //         while J <= MAX:\n //             ex[J][I] = ex[J-1][I] * ex[1][I]\n //             J += 1\n \n-//         J = 1\n+//         var J = 1\n //         while J <= MAX:\n //             ex[-J][I] = ex[J][I].conjugate()\n-//             J += 1\n-//         I += 1\n+//             var J += 1\n+//         var I += 1\n \n //     # AddSol(13.902000, 14.060000, -0.001000, 0.260700, 0.000000, 0.000000, 0.000000, 4.000000)\n-//     z = ex[4][4]\n-//     DLAM  += 13.902 * z.imag\n-//     DS    += 14.06 * z.imag\n-//     GAM1C += -0.001 * z.real\n-//     SINPI += 0.2607 * z.real\n+//     var z = ex[4][4];\n+//     var DLAM  += 13.902 * z.imag;\n+//     var DS    += 14.06 * z.imag;\n+//     var GAM1C += -0.001 * z.real;\n+//     var SINPI += 0.2607 * z.real;\n \n //     # AddSol(0.403000, -4.010000, 0.394000, 0.002300, 0.000000, 0.000000, 0.000000, 3.000000)\n-//     z = ex[3][4]\n-//     DLAM  += 0.403 * z.imag\n-//     DS    += -4.01 * z.imag\n-//     GAM1C += 0.394 * z.real\n-//     SINPI += 0.0023 * z.real\n+//     var z = ex[3][4];\n+//     var DLAM  += 0.403 * z.imag;\n+//     var DS    += -4.01 * z.imag;\n+//     var GAM1C += 0.394 * z.real;\n+//     var SINPI += 0.0023 * z.real;\n \n //     # AddSol(2369.912000, 2373.360000, 0.601000, 28.233300, 0.000000, 0.000000, 0.000000, 2.000000)\n-//     z = ex[2][4]\n-//     DLAM  += 2369.912 * z.imag\n-//     DS    += 2373.36 * z.imag\n-//     GAM1C += 0.601 * z.real\n-//     SINPI += 28.2333 * z.real\n+//     var z = ex[2][4]\n+//     var DLAM  += 2369.912 * z.imag\n+//     var DS    += 2373.36 * z.imag\n+//     var GAM1C += 0.601 * z.real\n+//     var SINPI += 28.2333 * z.real\n \n //     # AddSol(-125.154000, -112.790000, -0.725000, -0.978100, 0.000000, 0.000000, 0.000000, 1.000000)\n-//     z = ex[1][4]\n-//     DLAM  += -125.154 * z.imag\n-//     DS    += -112.79 * z.imag\n-//     GAM1C += -0.725 * z.real\n-//     SINPI += -0.9781 * z.real\n+//     var z = ex[1][4];\n+//     var DLAM  += -125.154 * z.imag;\n+//     var DS    += -112.79 * z.imag;\n+//     var GAM1C += -0.725 * z.real;\n+//     var SINPI += -0.9781 * z.real;\n \n //     # AddSol(1.979000, 6.980000, -0.445000, 0.043300, 1.000000, 0.000000, 0.000000, 4.000000)\n-//     z = ex[1][1] * ex[4][4]\n-//     DLAM  += 1.979 * z.imag\n-//     DS    += 6.98 * z.imag\n-//     GAM1C += -0.445 * z.real\n-//     SINPI += 0.0433 * z.real\n+//     var z = ex[1][1] * ex[4][4];\n+//     var DLAM  += 1.979 * z.imag;\n+//     var DS    += 6.98 * z.imag;\n+//     var GAM1C += -0.445 * z.real;\n+//     var SINPI += 0.0433 * z.real;\n \n //     # AddSol(191.953000, 192.720000, 0.029000, 3.086100, 1.000000, 0.000000, 0.000000, 2.000000)\n-//     z = ex[1][1] * ex[2][4]\n-//     DLAM  += 191.953 * z.imag\n-//     DS    += 192.72 * z.imag\n-//     GAM1C += 0.029 * z.real\n-//     SINPI += 3.0861 * z.real\n+//     var z = ex[1][1] * ex[2][4];\n+//     var DLAM  += 191.953 * z.imag;\n+//     var DS    += 192.72 * z.imag;\n+//     var GAM1C += 0.029 * z.real;\n+//     var SINPI += 3.0861 * z.real;\n \n //     # AddSol(-8.466000, -13.510000, 0.455000, -0.109300, 1.000000, 0.000000, 0.000000, 1.000000)\n-//     z = ex[1][1] * ex[1][4]\n-//     DLAM  += -8.466 * z.imag\n-//     DS    += -13.51 * z.imag\n-//     GAM1C += 0.455 * z.real\n-//     SINPI += -0.1093 * z.real\n+//     var z = ex[1][1] * ex[1][4];\n+//     var DLAM  += -8.466 * z.imag;\n+//     var DS    += -13.51 * z.imag;\n+//     var GAM1C += 0.455 * z.real;\n+//     var SINPI += -0.1093 * z.real;\n \n //     # AddSol(22639.500000, 22609.070000, 0.079000, 186.539800, 1.000000, 0.000000, 0.000000, 0.000000)\n-//     z = ex[1][1]\n-//     DLAM  += 22639.500 * z.imag\n-//     DS    += 22609.07 * z.imag\n-//     GAM1C += 0.079 * z.real\n-//     SINPI += 186.5398 * z.real\n+//     var z = ex[1][1];\n+//     var DLAM  += 22639.500 * z.imag;\n+//     var DS    += 22609.07 * z.imag;\n+//     var GAM1C += 0.079 * z.real;\n+//     var SINPI += 186.5398 * z.real;\n \n //     # AddSol(18.609000, 3.590000, -0.094000, 0.011800, 1.000000, 0.000000, 0.000000, -1.000000)\n-//     z = ex[1][1] * ex[-1][4]\n-//     DLAM  += 18.609 * z.imag\n-//     DS    += 3.59 * z.imag\n-//     GAM1C += -0.094 * z.real\n-//     SINPI += 0.0118 * z.real\n+//     var z = ex[1][1] * ex[-1][4];\n+//     var DLAM  += 18.609 * z.imag;\n+//     var DS    += 3.59 * z.imag;\n+//     var GAM1C += -0.094 * z.real;\n+//     var SINPI += 0.0118 * z.real;\n \n //     # AddSol(-4586.465000, -4578.130000, -0.077000, 34.311700, 1.000000, 0.000000, 0.000000, -2.000000)\n-//     z = ex[1][1] * ex[-2][4]\n-//     DLAM  += -4586.465 * z.imag\n-//     DS    += -4578.13 * z.imag\n-//     GAM1C += -0.077 * z.real\n-//     SINPI += 34.3117 * z.real\n+//     var z = ex[1][1] * ex[-2][4];\n+//     var DLAM  += -4586.465 * z.imag;\n+//     var DS    += -4578.13 * z.imag;\n+//     var GAM1C += -0.077 * z.real;\n+//     var SINPI += 34.3117 * z.real;\n \n //     # AddSol(3.215000, 5.440000, 0.192000, -0.038600, 1.000000, 0.000000, 0.000000, -3.000000)\n-//     z = ex[1][1] * ex[-3][4]\n-//     DLAM  += 3.215 * z.imag\n-//     DS    += 5.44 * z.imag\n-//     GAM1C += 0.192 * z.real\n-//     SINPI += -0.0386 * z.real\n+//     var z = ex[1][1] * ex[-3][4];\n+//     var DLAM  += 3.215 * z.imag;\n+//     var DS    += 5.44 * z.imag;\n+//     var GAM1C += 0.192 * z.real;\n+//     var SINPI += -0.0386 * z.real;\n \n //     # AddSol(-38.428000, -38.640000, 0.001000, 0.600800, 1.000000, 0.000000, 0.000000, -4.000000)\n-//     z = ex[1][1] * ex[-4][4]\n-//     DLAM  += -38.428 * z.imag\n-//     DS    += -38.64 * z.imag\n-//     GAM1C += 0.001 * z.real\n-//     SINPI += 0.6008 * z.real\n+//     var z = ex[1][1] * ex[-4][4];\n+//     var DLAM  += -38.428 * z.imag;\n+//     var DS    += -38.64 * z.imag;\n+//     var GAM1C += 0.001 * z.real;\n+//     var SINPI += 0.6008 * z.real;\n \n //     # AddSol(-0.393000, -1.430000, -0.092000, 0.008600, 1.000000, 0.000000, 0.000000, -6.000000)\n-//     z = ex[1][1] * ex[-6][4]\n-//     DLAM  += -0.393 * z.imag\n-//     DS    += -1.43 * z.imag\n-//     GAM1C += -0.092 * z.real\n-//     SINPI += 0.0086 * z.real\n+//     z = ex[1][1] * ex[-6][4];\n+//     DLAM  += -0.393 * z.imag;\n+//     DS    += -1.43 * z.imag;\n+//     GAM1C += -0.092 * z.real;\n+//     SINPI += 0.0086 * z.real;\n \n //     # AddSol(-0.289000, -1.590000, 0.123000, -0.005300, 0.000000, 1.000000, 0.000000, 4.000000)\n-//     z = ex[1][2] * ex[4][4]\n-//     DLAM  += -0.289 * z.imag\n-//     DS    += -1.59 * z.imag\n-//     GAM1C += 0.123 * z.real\n-//     SINPI += -0.0053 * z.real\n+//     z = ex[1][2] * ex[4][4];\n+//     DLAM  += -0.289 * z.imag;\n+//     DS    += -1.59 * z.imag;\n+//     GAM1C += 0.123 * z.real;\n+//     SINPI += -0.0053 * z.real;\n \n //     # AddSol(-24.420000, -25.100000, 0.040000, -0.300000, 0.000000, 1.000000, 0.000000, 2.000000)\n-//     z = ex[1][2] * ex[2][4]\n-//     DLAM  += -24.420 * z.imag\n-//     DS    += -25.10 * z.imag\n-//     GAM1C += 0.040 * z.real\n-//     SINPI += -0.3000 * z.real\n+//     z = ex[1][2] * ex[2][4];\n+//     DLAM  += -24.420 * z.imag;\n+//     DS    += -25.10 * z.imag;\n+//     GAM1C += 0.040 * z.real;\n+//     SINPI += -0.3000 * z.real;\n \n //     # AddSol(18.023000, 17.930000, 0.007000, 0.149400, 0.000000, 1.000000, 0.000000, 1.000000)\n-//     z = ex[1][2] * ex[1][4]\n-//     DLAM  += 18.023 * z.imag\n-//     DS    += 17.93 * z.imag\n-//     GAM1C += 0.007 * z.real\n-//     SINPI += 0.1494 * z.real\n+//     z = ex[1][2] * ex[1][4];\n+//     DLAM  += 18.023 * z.imag;\n+//     DS    += 17.93 * z.imag;\n+//     GAM1C += 0.007 * z.real;\n+//     SINPI += 0.1494 * z.real;\n \n //     # AddSol(-668.146000, -126.980000, -1.302000, -0.399700, 0.000000, 1.000000, 0.000000, 0.000000)\n-//     z = ex[1][2]\n-//     DLAM  += -668.146 * z.imag\n-//     DS    += -126.98 * z.imag\n-//     GAM1C += -1.302 * z.real\n-//     SINPI += -0.3997 * z.real\n+//     z = ex[1][2];\n+//     DLAM  += -668.146 * z.imag;\n+//     DS    += -126.98 * z.imag;\n+//     GAM1C += -1.302 * z.real;\n+//     SINPI += -0.3997 * z.real;\n \n //     # AddSol(0.560000, 0.320000, -0.001000, -0.003700, 0.000000, 1.000000, 0.000000, -1.000000)\n-//     z = ex[1][2] * ex[-1][4]\n-//     DLAM  += 0.560 * z.imag\n-//     DS    += 0.32 * z.imag\n-//     GAM1C += -0.001 * z.real\n-//     SINPI += -0.0037 * z.real\n+//     z = ex[1][2] * ex[-1][4];\n+//     DLAM  += 0.560 * z.imag;\n+//     DS    += 0.32 * z.imag;\n+//     GAM1C += -0.001 * z.real;\n+//     SINPI += -0.0037 * z.real;\n \n //     # AddSol(-165.145000, -165.060000, 0.054000, 1.917800, 0.000000, 1.000000, 0.000000, -2.000000)\n-//     z = ex[1][2] * ex[-2][4]\n-//     DLAM  += -165.145 * z.imag\n-//     DS    += -165.06 * z.imag\n-//     GAM1C += 0.054 * z.real\n-//     SINPI += 1.9178 * z.real\n+//     z = ex[1][2] * ex[-2][4];\n+//     DLAM  += -165.145 * z.imag;\n+//     DS    += -165.06 * z.imag;\n+//     GAM1C += 0.054 * z.real;\n+//     SINPI += 1.9178 * z.real;\n \n //     # AddSol(-1.877000, -6.460000, -0.416000, 0.033900, 0.000000, 1.000000, 0.000000, -4.000000)\n-//     z = ex[1][2] * ex[-4][4]\n-//     DLAM  += -1.877 * z.imag\n-//     DS    += -6.46 * z.imag\n-//     GAM1C += -0.416 * z.real\n-//     SINPI += 0.0339 * z.real\n+//     z = ex[1][2] * ex[-4][4];\n+//     DLAM  += -1.877 * z.imag;\n+//     DS    += -6.46 * z.imag;\n+//     GAM1C += -0.416 * z.real;\n+//     SINPI += 0.0339 * z.real;\n \n //     # AddSol(0.213000, 1.020000, -0.074000, 0.005400, 2.000000, 0.000000, 0.000000, 4.000000)\n-//     z = ex[2][1] * ex[4][4]\n-//     DLAM  += 0.213 * z.imag\n-//     DS    += 1.02 * z.imag\n-//     GAM1C += -0.074 * z.real\n-//     SINPI += 0.0054 * z.real\n+//     z = ex[2][1] * ex[4][4];\n+//     DLAM  += 0.213 * z.imag;\n+//     DS    += 1.02 * z.imag;\n+//     GAM1C += -0.074 * z.real;\n+//     SINPI += 0.0054 * z.real;\n \n //     # AddSol(14.387000, 14.780000, -0.017000, 0.283300, 2.000000, 0.000000, 0.000000, 2.000000)\n-//     z = ex[2][1] * ex[2][4]\n-//     DLAM  += 14.387 * z.imag\n-//     DS    += 14.78 * z.imag\n-//     GAM1C += -0.017 * z.real\n-//     SINPI += 0.2833 * z.real\n+//     z = ex[2][1] * ex[2][4];\n+//     DLAM  += 14.387 * z.imag;\n+//     DS    += 14.78 * z.imag;\n+//     GAM1C += -0.017 * z.real;\n+//     SINPI += 0.2833 * z.real;\n \n //     # AddSol(-0.586000, -1.200000, 0.054000, -0.010000, 2.000000, 0.000000, 0.000000, 1.000000)\n-//     z = ex[2][1] * ex[1][4]\n-//     DLAM  += -0.586 * z.imag\n-//     DS    += -1.20 * z.imag\n-//     GAM1C += 0.054 * z.real\n-//     SINPI += -0.0100 * z.real\n+//     z = ex[2][1] * ex[1][4];\n+//     DLAM  += -0.586 * z.imag;\n+//     DS    += -1.20 * z.imag;\n+//     GAM1C += 0.054 * z.real;\n+//     SINPI += -0.0100 * z.real;\n \n //     # AddSol(769.016000, 767.960000, 0.107000, 10.165700, 2.000000, 0.000000, 0.000000, 0.000000)\n-//     z = ex[2][1]\n-//     DLAM  += 769.016 * z.imag\n-//     DS    += 767.96 * z.imag\n-//     GAM1C += 0.107 * z.real\n-//     SINPI += 10.1657 * z.real\n+//     z = ex[2][1];\n+//     DLAM  += 769.016 * z.imag;\n+//     DS    += 767.96 * z.imag;\n+//     GAM1C += 0.107 * z.real;\n+//     SINPI += 10.1657 * z.real;\n \n //     # AddSol(1.750000, 2.010000, -0.018000, 0.015500, 2.000000, 0.000000, 0.000000, -1.000000)\n-//     z = ex[2][1] * ex[-1][4]\n-//     DLAM  += 1.750 * z.imag\n-//     DS    += 2.01 * z.imag\n-//     GAM1C += -0.018 * z.real\n-//     SINPI += 0.0155 * z.real\n+//     z = ex[2][1] * ex[-1][4];\n+//     DLAM  += 1.750 * z.imag;\n+//     DS    += 2.01 * z.imag;\n+//     GAM1C += -0.018 * z.real;\n+//     SINPI += 0.0155 * z.real;\n \n //     # AddSol(-211.656000, -152.530000, 5.679000, -0.303900, 2.000000, 0.000000, 0.000000, -2.000000)\n-//     z = ex[2][1] * ex[-2][4]\n-//     DLAM  += -211.656 * z.imag\n-//     DS    += -152.53 * z.imag\n-//     GAM1C += 5.679 * z.real\n-//     SINPI += -0.3039 * z.real\n+//     z = ex[2][1] * ex[-2][4];\n+//     DLAM  += -211.656 * z.imag;\n+//     DS    += -152.53 * z.imag;\n+//     GAM1C += 5.679 * z.real;\n+//     SINPI += -0.3039 * z.real;\n \n //     # AddSol(1.225000, 0.910000, -0.030000, -0.008800, 2.000000, 0.000000, 0.000000, -3.000000)\n-//     z = ex[2][1] * ex[-3][4]\n-//     DLAM  += 1.225 * z.imag\n-//     DS    += 0.91 * z.imag\n-//     GAM1C += -0.030 * z.real\n-//     SINPI += -0.0088 * z.real\n+//     z = ex[2][1] * ex[-3][4];\n+//     DLAM  += 1.225 * z.imag;\n+//     DS    += 0.91 * z.imag;\n+//     GAM1C += -0.030 * z.real;\n+//     SINPI += -0.0088 * z.real;\n \n //     # AddSol(-30.773000, -34.070000, -0.308000, 0.372200, 2.000000, 0.000000, 0.000000, -4.000000)\n-//     z = ex[2][1] * ex[-4][4]\n-//     DLAM  += -30.773 * z.imag\n-//     DS    += -34.07 * z.imag\n-//     GAM1C += -0.308 * z.real\n-//     SINPI += 0.3722 * z.real\n+//     z = ex[2][1] * ex[-4][4];\n+//     DLAM  += -30.773 * z.imag;\n+//     DS    += -34.07 * z.imag;\n+//     GAM1C += -0.308 * z.real;\n+//     SINPI += 0.3722 * z.real;\n \n //     # AddSol(-0.570000, -1.400000, -0.074000, 0.010900, 2.000000, 0.000000, 0.000000, -6.000000)\n-//     z = ex[2][1] * ex[-6][4]\n-//     DLAM  += -0.570 * z.imag\n-//     DS    += -1.40 * z.imag\n-//     GAM1C += -0.074 * z.real\n-//     SINPI += 0.0109 * z.real\n+//     z = ex[2][1] * ex[-6][4];\n+//     DLAM  += -0.570 * z.imag;\n+//     DS    += -1.40 * z.imag;\n+//     GAM1C += -0.074 * z.real;\n+//     SINPI += 0.0109 * z.real;\n \n //     # AddSol(-2.921000, -11.750000, 0.787000, -0.048400, 1.000000, 1.000000, 0.000000, 2.000000)\n //     z = ex[1][1] * ex[1][2] * ex[2][4]\n //     DLAM  += -2.921 * z.imag\n"
                },
                {
                    "date": 1641647404976,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,23 +1,25 @@\n // ignore_for_file: non_constant_identifier_names, prefer_typing_uninitialized_variables, camel_case_types, unused_local_variable, unused_element\n \n import 'dart:math';\n \n-void main() {\n-  var _PI2 = 2.0 * pi;\n-  var KM_PER_AU = 1.4959787069098932e+8;\n-  var _EARTH_FLATTENING = 0.996647180302104;\n-  var _EARTH_EQUATORIAL_RADIUS_KM = 6378.1366;\n-  var _EARTH_POLAR_RADIUS_KM = _EARTH_EQUATORIAL_RADIUS_KM * _EARTH_FLATTENING;\n-  var _EARTH_EQUATORIAL_RADIUS_AU = _EARTH_EQUATORIAL_RADIUS_KM / KM_PER_AU;\n-  var _ARC = 3600.0 * 180.0 / pi;\n+\n+var _PI2 = 2.0 * pi;\n+var KM_PER_AU = 1.4959787069098932e+8;\n+var _EARTH_FLATTENING = 0.996647180302104;\n+var _EARTH_EQUATORIAL_RADIUS_KM = 6378.1366;\n+var _EARTH_POLAR_RADIUS_KM = _EARTH_EQUATORIAL_RADIUS_KM * _EARTH_FLATTENING;\n+var _EARTH_EQUATORIAL_RADIUS_AU = _EARTH_EQUATORIAL_RADIUS_KM / KM_PER_AU;\n+var _ARC = 3600.0 * 180.0 / pi;\n+\n+Map<List> _Array1(double xmin, double xmax) {\n+  return dict((key, 0j) for key in range(xmin, 1+xmax));\n }\n-// def _Array1(xmin, xmax):\n-//     return dict((key, 0j) for key in range(xmin, 1+xmax))\n+Map<List> _Array2(double xmin, double xmax, double ymin, double ymax) {\n+  return Map((key, _Array1(ymin, ymax)) for key in range(xmin, 1+xmax));\n+}\n+    \n \n-// def _Array2(xmin, xmax, ymin, ymax):\n-//     return dict((key, _Array1(ymin, ymax)) for key in range(xmin, 1+xmax))\n-\n class _moonpos{\n   double lon, lat, dist;\n   _moonpos(this.lon, this.lat, this.dist) {\n     var geo_eclip_lon = lon;\n@@ -28,14 +30,16 @@\n   dynamic _CalcMoon(time) {\n     var _CalcMoonCount;\n     _CalcMoonCount += 1;\n \n+    var T = time.tt / 36525;\n+    var ex = _Array2(-6, 6, 1, 4);\n \n+\n   }\n   \n \n-//     var T = time.tt / 36525;\n-//     var ex = _Array2(-6, 6, 1, 4);\n+//     \n \n //     def Sine(phi):\n //         return math.sin(_PI2 * phi)\n \n"
                },
                {
                    "date": 1641696567932,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,26 +1,24 @@\n // ignore_for_file: non_constant_identifier_names, prefer_typing_uninitialized_variables, camel_case_types, unused_local_variable, unused_element\n \n import 'dart:math';\n \n-\n var _PI2 = 2.0 * pi;\n var KM_PER_AU = 1.4959787069098932e+8;\n var _EARTH_FLATTENING = 0.996647180302104;\n var _EARTH_EQUATORIAL_RADIUS_KM = 6378.1366;\n var _EARTH_POLAR_RADIUS_KM = _EARTH_EQUATORIAL_RADIUS_KM * _EARTH_FLATTENING;\n var _EARTH_EQUATORIAL_RADIUS_AU = _EARTH_EQUATORIAL_RADIUS_KM / KM_PER_AU;\n var _ARC = 3600.0 * 180.0 / pi;\n \n-Map<List> _Array1(double xmin, double xmax) {\n-  return dict((key, 0j) for key in range(xmin, 1+xmax));\n-}\n-Map<List> _Array2(double xmin, double xmax, double ymin, double ymax) {\n-  return Map((key, _Array1(ymin, ymax)) for key in range(xmin, 1+xmax));\n-}\n-    \n+// Map<List> _Array1(double xmin, double xmax) {\n+//   return dict((key, 0j) for key in range(xmin, 1+xmax));\n+// }\n+// Map<List> _Array2(double xmin, double xmax, double ymin, double ymax) {\n+//   return Map((key, _Array1(ymin, ymax)) for key in range(xmin, 1+xmax));\n+// }\n \n-class _moonpos{\n+class _moonpos {\n   double lon, lat, dist;\n   _moonpos(this.lon, this.lat, this.dist) {\n     var geo_eclip_lon = lon;\n     var geo_eclip_lat = lat;\n@@ -31,13 +29,11 @@\n     var _CalcMoonCount;\n     _CalcMoonCount += 1;\n \n     var T = time.tt / 36525;\n-    var ex = _Array2(-6, 6, 1, 4);\n-\n-\n+    // var ex = _Array2(-6, 6, 1, 4);\n   }\n-  \n+}\n \n //     \n \n //     def Sine(phi):\n@@ -813,5 +809,5 @@\n //     return _moonpos(\n //         _PI2 * Frac((L0+DLAM/_ARC) / _PI2),\n //         (math.pi / (180 * 3600)) * lat_seconds,\n //         (_ARC * _EARTH_EQUATORIAL_RADIUS_AU) / (0.999953253 * SINPI)\n-//     )\n\\ No newline at end of file\n+//     )\n"
                },
                {
                    "date": 1641745178526,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,8 +9,10 @@\n var _EARTH_POLAR_RADIUS_KM = _EARTH_EQUATORIAL_RADIUS_KM * _EARTH_FLATTENING;\n var _EARTH_EQUATORIAL_RADIUS_AU = _EARTH_EQUATORIAL_RADIUS_KM / KM_PER_AU;\n var _ARC = 3600.0 * 180.0 / pi;\n \n+Map<int, String> _map(int x, int y) => {for (var i = x; i < y; i++) i: '0j'};\n+\n // Map<List> _Array1(double xmin, double xmax) {\n //   return dict((key, 0j) for key in range(xmin, 1+xmax));\n // }\n // Map<List> _Array2(double xmin, double xmax, double ymin, double ymax) {\n"
                },
                {
                    "date": 1641745985524,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,10 +9,13 @@\n var _EARTH_POLAR_RADIUS_KM = _EARTH_EQUATORIAL_RADIUS_KM * _EARTH_FLATTENING;\n var _EARTH_EQUATORIAL_RADIUS_AU = _EARTH_EQUATORIAL_RADIUS_KM / KM_PER_AU;\n var _ARC = 3600.0 * 180.0 / pi;\n \n-Map<int, String> _map(int x, int y) => {for (var i = x; i < y; i++) i: '0j'};\n+Map<int, String> _Array1(int xmin, int xmax) => {for (int key = xmin; key < xmax+1; key++) key: '0j'};\n \n+Map<int, Map<int, String>> _Array2(int xmin, int xmax, int ymin, int ymax) =>\n+    {for (int key = xmin; key < xmax + 1; key++) key: _Array1(int xmin, int xmax)};\n+\n // Map<List> _Array1(double xmin, double xmax) {\n //   return dict((key, 0j) for key in range(xmin, 1+xmax));\n // }\n // Map<List> _Array2(double xmin, double xmax, double ymin, double ymax) {\n"
                },
                {
                    "date": 1641746000429,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,12 +9,13 @@\n var _EARTH_POLAR_RADIUS_KM = _EARTH_EQUATORIAL_RADIUS_KM * _EARTH_FLATTENING;\n var _EARTH_EQUATORIAL_RADIUS_AU = _EARTH_EQUATORIAL_RADIUS_KM / KM_PER_AU;\n var _ARC = 3600.0 * 180.0 / pi;\n \n-Map<int, String> _Array1(int xmin, int xmax) => {for (int key = xmin; key < xmax+1; key++) key: '0j'};\n+Map<int, String> _Array1(int xmin, int xmax) =>\n+    {for (int key = xmin; key < xmax + 1; key++) key: '0j'};\n \n-Map<int, Map<int, String>> _Array2(int xmin, int xmax, int ymin, int ymax) =>\n-    {for (int key = xmin; key < xmax + 1; key++) key: _Array1(int xmin, int xmax)};\n+// Map<int, Map<int, String>> _Array2(int xmin, int xmax, int ymin, int ymax) =>\n+//     {for (int key = xmin; key < xmax + 1; key++) key: _Array1(int xmin, int xmax)};\n \n // Map<List> _Array1(double xmin, double xmax) {\n //   return dict((key, 0j) for key in range(xmin, 1+xmax));\n // }\n"
                },
                {
                    "date": 1641748391980,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,21 +9,19 @@\n var _EARTH_POLAR_RADIUS_KM = _EARTH_EQUATORIAL_RADIUS_KM * _EARTH_FLATTENING;\n var _EARTH_EQUATORIAL_RADIUS_AU = _EARTH_EQUATORIAL_RADIUS_KM / KM_PER_AU;\n var _ARC = 3600.0 * 180.0 / pi;\n \n-Map<int, String> _Array1(int xmin, int xmax) =>\n-    {for (int key = xmin; key < xmax + 1; key++) key: '0j'};\n+Map _Array1(int xmin, int xmax) {\n+  Map arr1 = {for (var i = xmin; i < xmax + 1; i++) i: '0j'};\n+  return arr1;\n+}\n \n-// Map<int, Map<int, String>> _Array2(int xmin, int xmax, int ymin, int ymax) =>\n-//     {for (int key = xmin; key < xmax + 1; key++) key: _Array1(int xmin, int xmax)};\n+Map _Array2(int xmin, int xmax, int ymin, int ymax) {\n+  Map _arr1 = _Array1(ymin, ymax);\n+  Map arr2 = {for (var i = xmin; i < xmax + 1; i++) i: _arr1};\n+  return arr2;\n+}\n \n-// Map<List> _Array1(double xmin, double xmax) {\n-//   return dict((key, 0j) for key in range(xmin, 1+xmax));\n-// }\n-// Map<List> _Array2(double xmin, double xmax, double ymin, double ymax) {\n-//   return Map((key, _Array1(ymin, ymax)) for key in range(xmin, 1+xmax));\n-// }\n-\n class _moonpos {\n   double lon, lat, dist;\n   _moonpos(this.lon, this.lat, this.dist) {\n     var geo_eclip_lon = lon;\n@@ -31,139 +29,152 @@\n     var distance_au = dist;\n   }\n \n   dynamic _CalcMoon(time) {\n-    var _CalcMoonCount;\n-    _CalcMoonCount += 1;\n+    // var _CalcMoonCount;\n+    // _CalcMoonCount += 1;\n \n     var T = time.tt / 36525;\n-    // var ex = _Array2(-6, 6, 1, 4);\n-  }\n-}\n+    var ex = _Array2(-6, 6, 1, 4);\n \n-//     \n+    double Sine(double phi) => sin(_PI2 * phi);\n \n-//     def Sine(phi):\n-//         return math.sin(_PI2 * phi)\n+    double Frac(double x) => x - x.floor();\n \n-//     def Frac(x):\n-//         return x - math.floor(x)\n+    var T2 = T * T;\n+    var DLAM = 0;\n+    var DS = 0;\n+    var GAM1C = 0;\n+    var SINPI = 3422.7000;\n+    var S1 = Sine(0.19833 + 0.05611 * T);\n+    var S2 = Sine(0.27869 + 0.04508 * T);\n+    var S3 = Sine(0.16827 - 0.36903 * T);\n+    var S4 = Sine(0.34734 - 5.37261 * T);\n+    var S5 = Sine(0.10498 - 5.37899 * T);\n+    var S6 = Sine(0.42681 - 0.41855 * T);\n+    var S7 = Sine(0.14943 - 5.37511 * T);\n+    var DL0 =\n+        0.84 * S1 + 0.31 * S2 + 14.27 * S3 + 7.26 * S4 + 0.28 * S5 + 0.24 * S6;\n+    var DL =\n+        2.94 * S1 + 0.31 * S2 + 14.27 * S3 + 9.34 * S4 + 1.12 * S5 + 0.83 * S6;\n+    var DLS = -6.40 * S1 - 1.89 * S6;\n+    var DF = 0.21 * S1 +\n+        0.31 * S2 +\n+        14.27 * S3 -\n+        88.70 * S4 -\n+        15.30 * S5 +\n+        0.24 * S6 -\n+        1.86 * S7;\n+    var DD = DL0 - DLS;\n+    var DGAM = ((-3332E-9 * Sine(0.59734 - 5.37261 * T) -\n+        539E-9 * Sine(0.35498 - 5.37899 * T) -\n+        64E-9 * Sine(0.39943 - 5.37511 * T)));\n \n-//     var T2 = T*T;\n-//     var DLAM = 0;\n-//     var DS = 0;\n-//     var GAM1C = 0;\n-//     var SINPI = 3422.7000;\n-//     var S1 = Sine(0.19833+0.05611*T);\n-//     var S2 = Sine(0.27869+0.04508*T);\n-//     var S3 = Sine(0.16827-0.36903*T);\n-//     var S4 = Sine(0.34734-5.37261*T);\n-//     var S5 = Sine(0.10498-5.37899*T);\n-//     var S6 = Sine(0.42681-0.41855*T);\n-//     var S7 = Sine(0.14943-5.37511*T);\n-//     var DL0 = 0.84*S1+0.31*S2+14.27*S3+ 7.26*S4+ 0.28*S5+0.24*S6\n-//     var DL  = 2.94*S1+0.31*S2+14.27*S3+ 9.34*S4+ 1.12*S5+0.83*S6\n-//     var DLS =-6.40*S1                                   -1.89*S6\n-//     var DF  = 0.21*S1+0.31*S2+14.27*S3-88.70*S4-15.30*S5+0.24*S6-1.86*S7\n-//     var DD  = DL0-DLS\n-//     var DGAM  = ((-3332E-9 * Sine(0.59734-5.37261*T)\n-//                -539E-9 * Sine(0.35498-5.37899*T)\n-//                 -64E-9 * Sine(0.39943-5.37511*T)))\n+    var L0 = _PI2 * Frac(0.60643382 + 1336.85522467 * T - 0.00000313 * T2) +\n+        DL0 / _ARC;\n+    var L = _PI2 * Frac(0.37489701 + 1325.55240982 * T + 0.00002565 * T2) +\n+        DL / _ARC;\n+    var LS = _PI2 * Frac(0.99312619 + 99.99735956 * T - 0.00000044 * T2) +\n+        DLS / _ARC;\n+    var F = _PI2 * Frac(0.25909118 + 1342.22782980 * T - 0.00000892 * T2) +\n+        DF / _ARC;\n+    var D = _PI2 * Frac(0.82736186 + 1236.85308708 * T - 0.00000397 * T2) +\n+        DD / _ARC;\n \n-//     var L0 = _PI2*Frac(0.60643382+1336.85522467*T-0.00000313*T2) + DL0/_ARC\n-//     var L  = _PI2*Frac(0.37489701+1325.55240982*T+0.00002565*T2) + DL /_ARC\n-//     var LS = _PI2*Frac(0.99312619+  99.99735956*T-0.00000044*T2) + DLS/_ARC\n-//     var F  = _PI2*Frac(0.25909118+1342.22782980*T-0.00000892*T2) + DF /_ARC\n-//     var D  = _PI2*Frac(0.82736186+1236.85308708*T-0.00000397*T2) + DD /_ARC\n+    var I = 1;\n+    while I <= 4:\n+        if I == 1:\n+            ARG=L; MAX=4; FAC=1.000002208\n+        elif I == 2:\n+            ARG=LS; MAX=3; FAC=0.997504612-0.002495388*T\n+        elif I == 3:\n+            ARG=F; MAX=4; FAC=1.000002708+139.978*DGAM\n+        else:\n+            ARG=D; MAX=6; FAC=1.0\n \n-//     var I = 1\n-//     while I <= 4:\n-//         if I == 1:\n-//             ARG=L; MAX=4; FAC=1.000002208\n-//         elif I == 2:\n-//             ARG=LS; MAX=3; FAC=0.997504612-0.002495388*T\n-//         elif I == 3:\n-//             ARG=F; MAX=4; FAC=1.000002708+139.978*DGAM\n-//         else:\n-//             ARG=D; MAX=6; FAC=1.0\n+    var ex[0][I] = complex(1, 0);\n+    var ex[1][I] = complex(FAC * math.cos(ARG), FAC * math.sin(ARG));\n \n-//         var ex[0][I] = complex(1, 0)\n-//         var ex[1][I] = complex(FAC * math.cos(ARG), FAC * math.sin(ARG))\n+    var J = 2;\n+    while J <= MAX:\n+        ex[J][I] = ex[J-1][I] * ex[1][I];\n+        J += 1;\n \n-//         var J = 2\n-//         while J <= MAX:\n-//             ex[J][I] = ex[J-1][I] * ex[1][I]\n-//             J += 1\n+    var J = 1;\n+    while J <= MAX:\n+        ex[-J][I] = ex[J][I].conjugate();\n+        var J += 1;\n+    var I += 1;\n \n-//         var J = 1\n-//         while J <= MAX:\n-//             ex[-J][I] = ex[J][I].conjugate()\n-//             var J += 1\n-//         var I += 1\n+    // AddSol(13.902000, 14.060000, -0.001000, 0.260700, 0.000000, 0.000000, 0.000000, 4.000000)\n+    var z = ex[4][4];\n+    var DLAM  += 13.902 * z.imag;\n+    var DS    += 14.06 * z.imag;\n+    var GAM1C += -0.001 * z.real;\n+    var SINPI += 0.2607 * z.real;\n \n-//     # AddSol(13.902000, 14.060000, -0.001000, 0.260700, 0.000000, 0.000000, 0.000000, 4.000000)\n-//     var z = ex[4][4];\n-//     var DLAM  += 13.902 * z.imag;\n-//     var DS    += 14.06 * z.imag;\n-//     var GAM1C += -0.001 * z.real;\n-//     var SINPI += 0.2607 * z.real;\n+    // AddSol(0.403000, -4.010000, 0.394000, 0.002300, 0.000000, 0.000000, 0.000000, 3.000000)\n+    var z = ex[3][4];\n+    var DLAM  += 0.403 * z.imag;\n+    var DS    += -4.01 * z.imag;\n+    var GAM1C += 0.394 * z.real;\n+    var SINPI += 0.0023 * z.real;\n \n-//     # AddSol(0.403000, -4.010000, 0.394000, 0.002300, 0.000000, 0.000000, 0.000000, 3.000000)\n-//     var z = ex[3][4];\n-//     var DLAM  += 0.403 * z.imag;\n-//     var DS    += -4.01 * z.imag;\n-//     var GAM1C += 0.394 * z.real;\n-//     var SINPI += 0.0023 * z.real;\n+    // AddSol(2369.912000, 2373.360000, 0.601000, 28.233300, 0.000000, 0.000000, 0.000000, 2.000000)\n+    var z = ex[2][4];\n+    var DLAM  += 2369.912 * z.imag;\n+    var DS    += 2373.36 * z.imag;\n+    var GAM1C += 0.601 * z.real;\n+    var SINPI += 28.2333 * z.real;\n \n-//     # AddSol(2369.912000, 2373.360000, 0.601000, 28.233300, 0.000000, 0.000000, 0.000000, 2.000000)\n-//     var z = ex[2][4]\n-//     var DLAM  += 2369.912 * z.imag\n-//     var DS    += 2373.36 * z.imag\n-//     var GAM1C += 0.601 * z.real\n-//     var SINPI += 28.2333 * z.real\n+    // AddSol(-125.154000, -112.790000, -0.725000, -0.978100, 0.000000, 0.000000, 0.000000, 1.000000)\n+    var z = ex[1][4];\n+    var DLAM  += -125.154 * z.imag;\n+    var DS    += -112.79 * z.imag;\n+    var GAM1C += -0.725 * z.real;\n+    var SINPI += -0.9781 * z.real;\n \n-//     # AddSol(-125.154000, -112.790000, -0.725000, -0.978100, 0.000000, 0.000000, 0.000000, 1.000000)\n-//     var z = ex[1][4];\n-//     var DLAM  += -125.154 * z.imag;\n-//     var DS    += -112.79 * z.imag;\n-//     var GAM1C += -0.725 * z.real;\n-//     var SINPI += -0.9781 * z.real;\n+    // AddSol(1.979000, 6.980000, -0.445000, 0.043300, 1.000000, 0.000000, 0.000000, 4.000000)\n+    var z = ex[1][1] * ex[4][4];\n+    var DLAM  += 1.979 * z.imag;\n+    var DS    += 6.98 * z.imag;\n+    var GAM1C += -0.445 * z.real;\n+    var SINPI += 0.0433 * z.real;\n \n-//     # AddSol(1.979000, 6.980000, -0.445000, 0.043300, 1.000000, 0.000000, 0.000000, 4.000000)\n-//     var z = ex[1][1] * ex[4][4];\n-//     var DLAM  += 1.979 * z.imag;\n-//     var DS    += 6.98 * z.imag;\n-//     var GAM1C += -0.445 * z.real;\n-//     var SINPI += 0.0433 * z.real;\n+    // AddSol(191.953000, 192.720000, 0.029000, 3.086100, 1.000000, 0.000000, 0.000000, 2.000000)\n+    var z = ex[1][1] * ex[2][4];\n+    var DLAM  += 191.953 * z.imag;\n+    var DS    += 192.72 * z.imag;\n+    var GAM1C += 0.029 * z.real;\n+    var SINPI += 3.0861 * z.real;\n \n-//     # AddSol(191.953000, 192.720000, 0.029000, 3.086100, 1.000000, 0.000000, 0.000000, 2.000000)\n-//     var z = ex[1][1] * ex[2][4];\n-//     var DLAM  += 191.953 * z.imag;\n-//     var DS    += 192.72 * z.imag;\n-//     var GAM1C += 0.029 * z.real;\n-//     var SINPI += 3.0861 * z.real;\n+    // AddSol(-8.466000, -13.510000, 0.455000, -0.109300, 1.000000, 0.000000, 0.000000, 1.000000)\n+    var z = ex[1][1] * ex[1][4];\n+    var DLAM  += -8.466 * z.imag;\n+    var DS    += -13.51 * z.imag;\n+    var GAM1C += 0.455 * z.real;\n+    var SINPI += -0.1093 * z.real;\n \n-//     # AddSol(-8.466000, -13.510000, 0.455000, -0.109300, 1.000000, 0.000000, 0.000000, 1.000000)\n-//     var z = ex[1][1] * ex[1][4];\n-//     var DLAM  += -8.466 * z.imag;\n-//     var DS    += -13.51 * z.imag;\n-//     var GAM1C += 0.455 * z.real;\n-//     var SINPI += -0.1093 * z.real;\n+    // AddSol(22639.500000, 22609.070000, 0.079000, 186.539800, 1.000000, 0.000000, 0.000000, 0.000000)\n+    var z = ex[1][1];\n+    var DLAM  += 22639.500 * z.imag;\n+    var DS    += 22609.07 * z.imag;\n+    var GAM1C += 0.079 * z.real;\n+    var SINPI += 186.5398 * z.real;\n \n-//     # AddSol(22639.500000, 22609.070000, 0.079000, 186.539800, 1.000000, 0.000000, 0.000000, 0.000000)\n-//     var z = ex[1][1];\n-//     var DLAM  += 22639.500 * z.imag;\n-//     var DS    += 22609.07 * z.imag;\n-//     var GAM1C += 0.079 * z.real;\n-//     var SINPI += 186.5398 * z.real;\n+    // AddSol(18.609000, 3.590000, -0.094000, 0.011800, 1.000000, 0.000000, 0.000000, -1.000000)\n+    var z = ex[1][1] * ex[-1][4];\n+    var DLAM  += 18.609 * z.imag;\n+    var DS    += 3.59 * z.imag;\n+    var GAM1C += -0.094 * z.real;\n+    var SINPI += 0.0118 * z.real;\n+  }\n+}\n \n-//     # AddSol(18.609000, 3.590000, -0.094000, 0.011800, 1.000000, 0.000000, 0.000000, -1.000000)\n-//     var z = ex[1][1] * ex[-1][4];\n-//     var DLAM  += 18.609 * z.imag;\n-//     var DS    += 3.59 * z.imag;\n-//     var GAM1C += -0.094 * z.real;\n-//     var SINPI += 0.0118 * z.real;\n \n+\n+\n+\n //     # AddSol(-4586.465000, -4578.130000, -0.077000, 34.311700, 1.000000, 0.000000, 0.000000, -2.000000)\n //     var z = ex[1][1] * ex[-2][4];\n //     var DLAM  += -4586.465 * z.imag;\n //     var DS    += -4578.13 * z.imag;\n"
                },
                {
                    "date": 1641782033107,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -80,725 +80,52 @@\n     var D = _PI2 * Frac(0.82736186 + 1236.85308708 * T - 0.00000397 * T2) +\n         DD / _ARC;\n \n     var I = 1;\n-    while I <= 4:\n-        if I == 1:\n-            ARG=L; MAX=4; FAC=1.000002208\n-        elif I == 2:\n-            ARG=LS; MAX=3; FAC=0.997504612-0.002495388*T\n-        elif I == 3:\n-            ARG=F; MAX=4; FAC=1.000002708+139.978*DGAM\n-        else:\n-            ARG=D; MAX=6; FAC=1.0\n+    var ARG,MAX,FAC,J;\n+    while (I <= 4) {\n+      if (I == 1) {ARG=L; MAX=4; FAC=1.000002208;}    \n+      if (I == 2)\n+          {ARG=LS; MAX=3; FAC=0.997504612-0.002495388*T;}\n+      if (I == 3)\n+          {ARG=F; MAX=4; FAC=1.000002708+139.978*DGAM;}\n+      else\n+          {ARG=D; MAX=6; FAC=1.0;}\n \n-    var ex[0][I] = complex(1, 0);\n-    var ex[1][I] = complex(FAC * math.cos(ARG), FAC * math.sin(ARG));\n+      var ex[0][I] = complex(1, 0);\n+      var ex[1][I] = complex(FAC * cos(ARG), FAC * sin(ARG));\n \n-    var J = 2;\n-    while J <= MAX:\n-        ex[J][I] = ex[J-1][I] * ex[1][I];\n-        J += 1;\n+      J = 2;\n+      while (J <= MAX)\n+          {ex[J][I] = ex[J-1][I] * ex[1][I];\n+          J += 1;}\n \n-    var J = 1;\n-    while J <= MAX:\n-        ex[-J][I] = ex[J][I].conjugate();\n-        var J += 1;\n-    var I += 1;\n-\n+      J = 1;\n+      while (J <= MAX)\n+          {ex[-J][I] = ex[J][I].conjugate();\n+          J += 1;}\n+        \n+      I++;\n+    }\n+  \n     // AddSol(13.902000, 14.060000, -0.001000, 0.260700, 0.000000, 0.000000, 0.000000, 4.000000)\n     var z = ex[4][4];\n-    var DLAM  += 13.902 * z.imag;\n-    var DS    += 14.06 * z.imag;\n-    var GAM1C += -0.001 * z.real;\n-    var SINPI += 0.2607 * z.real;\n+    DLAM  += (13.902 * z.imag) as int;\n+    DS    += (14.06 * z.imag) as int;\n+    GAM1C += (-0.001 * z.real) as int;\n+    SINPI += 0.2607 * z.real;\n \n-    // AddSol(0.403000, -4.010000, 0.394000, 0.002300, 0.000000, 0.000000, 0.000000, 3.000000)\n-    var z = ex[3][4];\n-    var DLAM  += 0.403 * z.imag;\n-    var DS    += -4.01 * z.imag;\n-    var GAM1C += 0.394 * z.real;\n-    var SINPI += 0.0023 * z.real;\n \n-    // AddSol(2369.912000, 2373.360000, 0.601000, 28.233300, 0.000000, 0.000000, 0.000000, 2.000000)\n-    var z = ex[2][4];\n-    var DLAM  += 2369.912 * z.imag;\n-    var DS    += 2373.36 * z.imag;\n-    var GAM1C += 0.601 * z.real;\n-    var SINPI += 28.2333 * z.real;\n+  }\n \n-    // AddSol(-125.154000, -112.790000, -0.725000, -0.978100, 0.000000, 0.000000, 0.000000, 1.000000)\n-    var z = ex[1][4];\n-    var DLAM  += -125.154 * z.imag;\n-    var DS    += -112.79 * z.imag;\n-    var GAM1C += -0.725 * z.real;\n-    var SINPI += -0.9781 * z.real;\n-\n-    // AddSol(1.979000, 6.980000, -0.445000, 0.043300, 1.000000, 0.000000, 0.000000, 4.000000)\n-    var z = ex[1][1] * ex[4][4];\n-    var DLAM  += 1.979 * z.imag;\n-    var DS    += 6.98 * z.imag;\n-    var GAM1C += -0.445 * z.real;\n-    var SINPI += 0.0433 * z.real;\n-\n-    // AddSol(191.953000, 192.720000, 0.029000, 3.086100, 1.000000, 0.000000, 0.000000, 2.000000)\n-    var z = ex[1][1] * ex[2][4];\n-    var DLAM  += 191.953 * z.imag;\n-    var DS    += 192.72 * z.imag;\n-    var GAM1C += 0.029 * z.real;\n-    var SINPI += 3.0861 * z.real;\n-\n-    // AddSol(-8.466000, -13.510000, 0.455000, -0.109300, 1.000000, 0.000000, 0.000000, 1.000000)\n-    var z = ex[1][1] * ex[1][4];\n-    var DLAM  += -8.466 * z.imag;\n-    var DS    += -13.51 * z.imag;\n-    var GAM1C += 0.455 * z.real;\n-    var SINPI += -0.1093 * z.real;\n-\n-    // AddSol(22639.500000, 22609.070000, 0.079000, 186.539800, 1.000000, 0.000000, 0.000000, 0.000000)\n-    var z = ex[1][1];\n-    var DLAM  += 22639.500 * z.imag;\n-    var DS    += 22609.07 * z.imag;\n-    var GAM1C += 0.079 * z.real;\n-    var SINPI += 186.5398 * z.real;\n-\n-    // AddSol(18.609000, 3.590000, -0.094000, 0.011800, 1.000000, 0.000000, 0.000000, -1.000000)\n-    var z = ex[1][1] * ex[-1][4];\n-    var DLAM  += 18.609 * z.imag;\n-    var DS    += 3.59 * z.imag;\n-    var GAM1C += -0.094 * z.real;\n-    var SINPI += 0.0118 * z.real;\n-  }\n+  int complex(int i, int j) {return i;}\n }\n \n+// # AddSol\n+// # AddSol ....\n \n \n \n-\n-//     # AddSol(-4586.465000, -4578.130000, -0.077000, 34.311700, 1.000000, 0.000000, 0.000000, -2.000000)\n-//     var z = ex[1][1] * ex[-2][4];\n-//     var DLAM  += -4586.465 * z.imag;\n-//     var DS    += -4578.13 * z.imag;\n-//     var GAM1C += -0.077 * z.real;\n-//     var SINPI += 34.3117 * z.real;\n-\n-//     # AddSol(3.215000, 5.440000, 0.192000, -0.038600, 1.000000, 0.000000, 0.000000, -3.000000)\n-//     var z = ex[1][1] * ex[-3][4];\n-//     var DLAM  += 3.215 * z.imag;\n-//     var DS    += 5.44 * z.imag;\n-//     var GAM1C += 0.192 * z.real;\n-//     var SINPI += -0.0386 * z.real;\n-\n-//     # AddSol(-38.428000, -38.640000, 0.001000, 0.600800, 1.000000, 0.000000, 0.000000, -4.000000)\n-//     var z = ex[1][1] * ex[-4][4];\n-//     var DLAM  += -38.428 * z.imag;\n-//     var DS    += -38.64 * z.imag;\n-//     var GAM1C += 0.001 * z.real;\n-//     var SINPI += 0.6008 * z.real;\n-\n-//     # AddSol(-0.393000, -1.430000, -0.092000, 0.008600, 1.000000, 0.000000, 0.000000, -6.000000)\n-//     z = ex[1][1] * ex[-6][4];\n-//     DLAM  += -0.393 * z.imag;\n-//     DS    += -1.43 * z.imag;\n-//     GAM1C += -0.092 * z.real;\n-//     SINPI += 0.0086 * z.real;\n-\n-//     # AddSol(-0.289000, -1.590000, 0.123000, -0.005300, 0.000000, 1.000000, 0.000000, 4.000000)\n-//     z = ex[1][2] * ex[4][4];\n-//     DLAM  += -0.289 * z.imag;\n-//     DS    += -1.59 * z.imag;\n-//     GAM1C += 0.123 * z.real;\n-//     SINPI += -0.0053 * z.real;\n-\n-//     # AddSol(-24.420000, -25.100000, 0.040000, -0.300000, 0.000000, 1.000000, 0.000000, 2.000000)\n-//     z = ex[1][2] * ex[2][4];\n-//     DLAM  += -24.420 * z.imag;\n-//     DS    += -25.10 * z.imag;\n-//     GAM1C += 0.040 * z.real;\n-//     SINPI += -0.3000 * z.real;\n-\n-//     # AddSol(18.023000, 17.930000, 0.007000, 0.149400, 0.000000, 1.000000, 0.000000, 1.000000)\n-//     z = ex[1][2] * ex[1][4];\n-//     DLAM  += 18.023 * z.imag;\n-//     DS    += 17.93 * z.imag;\n-//     GAM1C += 0.007 * z.real;\n-//     SINPI += 0.1494 * z.real;\n-\n-//     # AddSol(-668.146000, -126.980000, -1.302000, -0.399700, 0.000000, 1.000000, 0.000000, 0.000000)\n-//     z = ex[1][2];\n-//     DLAM  += -668.146 * z.imag;\n-//     DS    += -126.98 * z.imag;\n-//     GAM1C += -1.302 * z.real;\n-//     SINPI += -0.3997 * z.real;\n-\n-//     # AddSol(0.560000, 0.320000, -0.001000, -0.003700, 0.000000, 1.000000, 0.000000, -1.000000)\n-//     z = ex[1][2] * ex[-1][4];\n-//     DLAM  += 0.560 * z.imag;\n-//     DS    += 0.32 * z.imag;\n-//     GAM1C += -0.001 * z.real;\n-//     SINPI += -0.0037 * z.real;\n-\n-//     # AddSol(-165.145000, -165.060000, 0.054000, 1.917800, 0.000000, 1.000000, 0.000000, -2.000000)\n-//     z = ex[1][2] * ex[-2][4];\n-//     DLAM  += -165.145 * z.imag;\n-//     DS    += -165.06 * z.imag;\n-//     GAM1C += 0.054 * z.real;\n-//     SINPI += 1.9178 * z.real;\n-\n-//     # AddSol(-1.877000, -6.460000, -0.416000, 0.033900, 0.000000, 1.000000, 0.000000, -4.000000)\n-//     z = ex[1][2] * ex[-4][4];\n-//     DLAM  += -1.877 * z.imag;\n-//     DS    += -6.46 * z.imag;\n-//     GAM1C += -0.416 * z.real;\n-//     SINPI += 0.0339 * z.real;\n-\n-//     # AddSol(0.213000, 1.020000, -0.074000, 0.005400, 2.000000, 0.000000, 0.000000, 4.000000)\n-//     z = ex[2][1] * ex[4][4];\n-//     DLAM  += 0.213 * z.imag;\n-//     DS    += 1.02 * z.imag;\n-//     GAM1C += -0.074 * z.real;\n-//     SINPI += 0.0054 * z.real;\n-\n-//     # AddSol(14.387000, 14.780000, -0.017000, 0.283300, 2.000000, 0.000000, 0.000000, 2.000000)\n-//     z = ex[2][1] * ex[2][4];\n-//     DLAM  += 14.387 * z.imag;\n-//     DS    += 14.78 * z.imag;\n-//     GAM1C += -0.017 * z.real;\n-//     SINPI += 0.2833 * z.real;\n-\n-//     # AddSol(-0.586000, -1.200000, 0.054000, -0.010000, 2.000000, 0.000000, 0.000000, 1.000000)\n-//     z = ex[2][1] * ex[1][4];\n-//     DLAM  += -0.586 * z.imag;\n-//     DS    += -1.20 * z.imag;\n-//     GAM1C += 0.054 * z.real;\n-//     SINPI += -0.0100 * z.real;\n-\n-//     # AddSol(769.016000, 767.960000, 0.107000, 10.165700, 2.000000, 0.000000, 0.000000, 0.000000)\n-//     z = ex[2][1];\n-//     DLAM  += 769.016 * z.imag;\n-//     DS    += 767.96 * z.imag;\n-//     GAM1C += 0.107 * z.real;\n-//     SINPI += 10.1657 * z.real;\n-\n-//     # AddSol(1.750000, 2.010000, -0.018000, 0.015500, 2.000000, 0.000000, 0.000000, -1.000000)\n-//     z = ex[2][1] * ex[-1][4];\n-//     DLAM  += 1.750 * z.imag;\n-//     DS    += 2.01 * z.imag;\n-//     GAM1C += -0.018 * z.real;\n-//     SINPI += 0.0155 * z.real;\n-\n-//     # AddSol(-211.656000, -152.530000, 5.679000, -0.303900, 2.000000, 0.000000, 0.000000, -2.000000)\n-//     z = ex[2][1] * ex[-2][4];\n-//     DLAM  += -211.656 * z.imag;\n-//     DS    += -152.53 * z.imag;\n-//     GAM1C += 5.679 * z.real;\n-//     SINPI += -0.3039 * z.real;\n-\n-//     # AddSol(1.225000, 0.910000, -0.030000, -0.008800, 2.000000, 0.000000, 0.000000, -3.000000)\n-//     z = ex[2][1] * ex[-3][4];\n-//     DLAM  += 1.225 * z.imag;\n-//     DS    += 0.91 * z.imag;\n-//     GAM1C += -0.030 * z.real;\n-//     SINPI += -0.0088 * z.real;\n-\n-//     # AddSol(-30.773000, -34.070000, -0.308000, 0.372200, 2.000000, 0.000000, 0.000000, -4.000000)\n-//     z = ex[2][1] * ex[-4][4];\n-//     DLAM  += -30.773 * z.imag;\n-//     DS    += -34.07 * z.imag;\n-//     GAM1C += -0.308 * z.real;\n-//     SINPI += 0.3722 * z.real;\n-\n-//     # AddSol(-0.570000, -1.400000, -0.074000, 0.010900, 2.000000, 0.000000, 0.000000, -6.000000)\n-//     z = ex[2][1] * ex[-6][4];\n-//     DLAM  += -0.570 * z.imag;\n-//     DS    += -1.40 * z.imag;\n-//     GAM1C += -0.074 * z.real;\n-//     SINPI += 0.0109 * z.real;\n-\n-//     # AddSol(-2.921000, -11.750000, 0.787000, -0.048400, 1.000000, 1.000000, 0.000000, 2.000000)\n-//     z = ex[1][1] * ex[1][2] * ex[2][4]\n-//     DLAM  += -2.921 * z.imag\n-//     DS    += -11.75 * z.imag\n-//     GAM1C += 0.787 * z.real\n-//     SINPI += -0.0484 * z.real\n-\n-//     # AddSol(1.267000, 1.520000, -0.022000, 0.016400, 1.000000, 1.000000, 0.000000, 1.000000)\n-//     z = ex[1][1] * ex[1][2] * ex[1][4]\n-//     DLAM  += 1.267 * z.imag\n-//     DS    += 1.52 * z.imag\n-//     GAM1C += -0.022 * z.real\n-//     SINPI += 0.0164 * z.real\n-\n-//     # AddSol(-109.673000, -115.180000, 0.461000, -0.949000, 1.000000, 1.000000, 0.000000, 0.000000)\n-//     z = ex[1][1] * ex[1][2]\n-//     DLAM  += -109.673 * z.imag\n-//     DS    += -115.18 * z.imag\n-//     GAM1C += 0.461 * z.real\n-//     SINPI += -0.9490 * z.real\n-\n-//     # AddSol(-205.962000, -182.360000, 2.056000, 1.443700, 1.000000, 1.000000, 0.000000, -2.000000)\n-//     z = ex[1][1] * ex[1][2] * ex[-2][4]\n-//     DLAM  += -205.962 * z.imag\n-//     DS    += -182.36 * z.imag\n-//     GAM1C += 2.056 * z.real\n-//     SINPI += 1.4437 * z.real\n-\n-//     # AddSol(0.233000, 0.360000, 0.012000, -0.002500, 1.000000, 1.000000, 0.000000, -3.000000)\n-//     z = ex[1][1] * ex[1][2] * ex[-3][4]\n-//     DLAM  += 0.233 * z.imag\n-//     DS    += 0.36 * z.imag\n-//     GAM1C += 0.012 * z.real\n-//     SINPI += -0.0025 * z.real\n-\n-//     # AddSol(-4.391000, -9.660000, -0.471000, 0.067300, 1.000000, 1.000000, 0.000000, -4.000000)\n-//     z = ex[1][1] * ex[1][2] * ex[-4][4]\n-//     DLAM  += -4.391 * z.imag\n-//     DS    += -9.66 * z.imag\n-//     GAM1C += -0.471 * z.real\n-//     SINPI += 0.0673 * z.real\n-\n-//     # AddSol(0.283000, 1.530000, -0.111000, 0.006000, 1.000000, -1.000000, 0.000000, 4.000000)\n-//     z = ex[1][1] * ex[-1][2] * ex[4][4]\n-//     DLAM  += 0.283 * z.imag\n-//     DS    += 1.53 * z.imag\n-//     GAM1C += -0.111 * z.real\n-//     SINPI += 0.0060 * z.real\n-\n-//     # AddSol(14.577000, 31.700000, -1.540000, 0.230200, 1.000000, -1.000000, 0.000000, 2.000000)\n-//     z = ex[1][1] * ex[-1][2] * ex[2][4]\n-//     DLAM  += 14.577 * z.imag\n-//     DS    += 31.70 * z.imag\n-//     GAM1C += -1.540 * z.real\n-//     SINPI += 0.2302 * z.real\n-\n-//     # AddSol(147.687000, 138.760000, 0.679000, 1.152800, 1.000000, -1.000000, 0.000000, 0.000000)\n-//     z = ex[1][1] * ex[-1][2]\n-//     DLAM  += 147.687 * z.imag\n-//     DS    += 138.76 * z.imag\n-//     GAM1C += 0.679 * z.real\n-//     SINPI += 1.1528 * z.real\n-\n-//     # AddSol(-1.089000, 0.550000, 0.021000, 0.000000, 1.000000, -1.000000, 0.000000, -1.000000)\n-//     z = ex[1][1] * ex[-1][2] * ex[-1][4]\n-//     DLAM  += -1.089 * z.imag\n-//     DS    += 0.55 * z.imag\n-//     GAM1C += 0.021 * z.real\n-\n-//     # AddSol(28.475000, 23.590000, -0.443000, -0.225700, 1.000000, -1.000000, 0.000000, -2.000000)\n-//     z = ex[1][1] * ex[-1][2] * ex[-2][4]\n-//     DLAM  += 28.475 * z.imag\n-//     DS    += 23.59 * z.imag\n-//     GAM1C += -0.443 * z.real\n-//     SINPI += -0.2257 * z.real\n-\n-//     # AddSol(-0.276000, -0.380000, -0.006000, -0.003600, 1.000000, -1.000000, 0.000000, -3.000000)\n-//     z = ex[1][1] * ex[-1][2] * ex[-3][4]\n-//     DLAM  += -0.276 * z.imag\n-//     DS    += -0.38 * z.imag\n-//     GAM1C += -0.006 * z.real\n-//     SINPI += -0.0036 * z.real\n-\n-//     # AddSol(0.636000, 2.270000, 0.146000, -0.010200, 1.000000, -1.000000, 0.000000, -4.000000)\n-//     z = ex[1][1] * ex[-1][2] * ex[-4][4]\n-//     DLAM  += 0.636 * z.imag\n-//     DS    += 2.27 * z.imag\n-//     GAM1C += 0.146 * z.real\n-//     SINPI += -0.0102 * z.real\n-\n-//     # AddSol(-0.189000, -1.680000, 0.131000, -0.002800, 0.000000, 2.000000, 0.000000, 2.000000)\n-//     z = ex[2][2] * ex[2][4]\n-//     DLAM  += -0.189 * z.imag\n-//     DS    += -1.68 * z.imag\n-//     GAM1C += 0.131 * z.real\n-//     SINPI += -0.0028 * z.real\n-\n-//     # AddSol(-7.486000, -0.660000, -0.037000, -0.008600, 0.000000, 2.000000, 0.000000, 0.000000)\n-//     z = ex[2][2]\n-//     DLAM  += -7.486 * z.imag\n-//     DS    += -0.66 * z.imag\n-//     GAM1C += -0.037 * z.real\n-//     SINPI += -0.0086 * z.real\n-\n-//     # AddSol(-8.096000, -16.350000, -0.740000, 0.091800, 0.000000, 2.000000, 0.000000, -2.000000)\n-//     z = ex[2][2] * ex[-2][4]\n-//     DLAM  += -8.096 * z.imag\n-//     DS    += -16.35 * z.imag\n-//     GAM1C += -0.740 * z.real\n-//     SINPI += 0.0918 * z.real\n-\n-//     # AddSol(-5.741000, -0.040000, 0.000000, -0.000900, 0.000000, 0.000000, 2.000000, 2.000000)\n-//     z = ex[2][3] * ex[2][4]\n-//     DLAM  += -5.741 * z.imag\n-//     DS    += -0.04 * z.imag\n-//     SINPI += -0.0009 * z.real\n-\n-//     # AddSol(0.255000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 2.000000, 1.000000)\n-//     z = ex[2][3] * ex[1][4]\n-//     DLAM  += 0.255 * z.imag\n-\n-//     # AddSol(-411.608000, -0.200000, 0.000000, -0.012400, 0.000000, 0.000000, 2.000000, 0.000000)\n-//     z = ex[2][3]\n-//     DLAM  += -411.608 * z.imag\n-//     DS    += -0.20 * z.imag\n-//     SINPI += -0.0124 * z.real\n-\n-//     # AddSol(0.584000, 0.840000, 0.000000, 0.007100, 0.000000, 0.000000, 2.000000, -1.000000)\n-//     z = ex[2][3] * ex[-1][4]\n-//     DLAM  += 0.584 * z.imag\n-//     DS    += 0.84 * z.imag\n-//     SINPI += 0.0071 * z.real\n-\n-//     # AddSol(-55.173000, -52.140000, 0.000000, -0.105200, 0.000000, 0.000000, 2.000000, -2.000000)\n-//     z = ex[2][3] * ex[-2][4]\n-//     DLAM  += -55.173 * z.imag\n-//     DS    += -52.14 * z.imag\n-//     SINPI += -0.1052 * z.real\n-\n-//     # AddSol(0.254000, 0.250000, 0.000000, -0.001700, 0.000000, 0.000000, 2.000000, -3.000000)\n-//     z = ex[2][3] * ex[-3][4]\n-//     DLAM  += 0.254 * z.imag\n-//     DS    += 0.25 * z.imag\n-//     SINPI += -0.0017 * z.real\n-\n-//     # AddSol(0.025000, -1.670000, 0.000000, 0.003100, 0.000000, 0.000000, 2.000000, -4.000000)\n-//     z = ex[2][3] * ex[-4][4]\n-//     DLAM  += 0.025 * z.imag\n-//     DS    += -1.67 * z.imag\n-//     SINPI += 0.0031 * z.real\n-\n-//     # AddSol(1.060000, 2.960000, -0.166000, 0.024300, 3.000000, 0.000000, 0.000000, 2.000000)\n-//     z = ex[3][1] * ex[2][4]\n-//     DLAM  += 1.060 * z.imag\n-//     DS    += 2.96 * z.imag\n-//     GAM1C += -0.166 * z.real\n-//     SINPI += 0.0243 * z.real\n-\n-//     # AddSol(36.124000, 50.640000, -1.300000, 0.621500, 3.000000, 0.000000, 0.000000, 0.000000)\n-//     z = ex[3][1]\n-//     DLAM  += 36.124 * z.imag\n-//     DS    += 50.64 * z.imag\n-//     GAM1C += -1.300 * z.real\n-//     SINPI += 0.6215 * z.real\n-\n-//     # AddSol(-13.193000, -16.400000, 0.258000, -0.118700, 3.000000, 0.000000, 0.000000, -2.000000)\n-//     z = ex[3][1] * ex[-2][4]\n-//     DLAM  += -13.193 * z.imag\n-//     DS    += -16.40 * z.imag\n-//     GAM1C += 0.258 * z.real\n-//     SINPI += -0.1187 * z.real\n-\n-//     # AddSol(-1.187000, -0.740000, 0.042000, 0.007400, 3.000000, 0.000000, 0.000000, -4.000000)\n-//     z = ex[3][1] * ex[-4][4]\n-//     DLAM  += -1.187 * z.imag\n-//     DS    += -0.74 * z.imag\n-//     GAM1C += 0.042 * z.real\n-//     SINPI += 0.0074 * z.real\n-\n-//     # AddSol(-0.293000, -0.310000, -0.002000, 0.004600, 3.000000, 0.000000, 0.000000, -6.000000)\n-//     z = ex[3][1] * ex[-6][4]\n-//     DLAM  += -0.293 * z.imag\n-//     DS    += -0.31 * z.imag\n-//     GAM1C += -0.002 * z.real\n-//     SINPI += 0.0046 * z.real\n-\n-//     # AddSol(-0.290000, -1.450000, 0.116000, -0.005100, 2.000000, 1.000000, 0.000000, 2.000000)\n-//     z = ex[2][1] * ex[1][2] * ex[2][4]\n-//     DLAM  += -0.290 * z.imag\n-//     DS    += -1.45 * z.imag\n-//     GAM1C += 0.116 * z.real\n-//     SINPI += -0.0051 * z.real\n-\n-//     # AddSol(-7.649000, -10.560000, 0.259000, -0.103800, 2.000000, 1.000000, 0.000000, 0.000000)\n-//     z = ex[2][1] * ex[1][2]\n-//     DLAM  += -7.649 * z.imag\n-//     DS    += -10.56 * z.imag\n-//     GAM1C += 0.259 * z.real\n-//     SINPI += -0.1038 * z.real\n-\n-//     # AddSol(-8.627000, -7.590000, 0.078000, -0.019200, 2.000000, 1.000000, 0.000000, -2.000000)\n-//     z = ex[2][1] * ex[1][2] * ex[-2][4]\n-//     DLAM  += -8.627 * z.imag\n-//     DS    += -7.59 * z.imag\n-//     GAM1C += 0.078 * z.real\n-//     SINPI += -0.0192 * z.real\n-\n-//     # AddSol(-2.740000, -2.540000, 0.022000, 0.032400, 2.000000, 1.000000, 0.000000, -4.000000)\n-//     z = ex[2][1] * ex[1][2] * ex[-4][4]\n-//     DLAM  += -2.740 * z.imag\n-//     DS    += -2.54 * z.imag\n-//     GAM1C += 0.022 * z.real\n-//     SINPI += 0.0324 * z.real\n-\n-//     # AddSol(1.181000, 3.320000, -0.212000, 0.021300, 2.000000, -1.000000, 0.000000, 2.000000)\n-//     z = ex[2][1] * ex[-1][2] * ex[2][4]\n-//     DLAM  += 1.181 * z.imag\n-//     DS    += 3.32 * z.imag\n-//     GAM1C += -0.212 * z.real\n-//     SINPI += 0.0213 * z.real\n-\n-//     # AddSol(9.703000, 11.670000, -0.151000, 0.126800, 2.000000, -1.000000, 0.000000, 0.000000)\n-//     z = ex[2][1] * ex[-1][2]\n-//     DLAM  += 9.703 * z.imag\n-//     DS    += 11.67 * z.imag\n-//     GAM1C += -0.151 * z.real\n-//     SINPI += 0.1268 * z.real\n-\n-//     # AddSol(-0.352000, -0.370000, 0.001000, -0.002800, 2.000000, -1.000000, 0.000000, -1.000000)\n-//     z = ex[2][1] * ex[-1][2] * ex[-1][4]\n-//     DLAM  += -0.352 * z.imag\n-//     DS    += -0.37 * z.imag\n-//     GAM1C += 0.001 * z.real\n-//     SINPI += -0.0028 * z.real\n-\n-//     # AddSol(-2.494000, -1.170000, -0.003000, -0.001700, 2.000000, -1.000000, 0.000000, -2.000000)\n-//     z = ex[2][1] * ex[-1][2] * ex[-2][4]\n-//     DLAM  += -2.494 * z.imag\n-//     DS    += -1.17 * z.imag\n-//     GAM1C += -0.003 * z.real\n-//     SINPI += -0.0017 * z.real\n-\n-//     # AddSol(0.360000, 0.200000, -0.012000, -0.004300, 2.000000, -1.000000, 0.000000, -4.000000)\n-//     z = ex[2][1] * ex[-1][2] * ex[-4][4]\n-//     DLAM  += 0.360 * z.imag\n-//     DS    += 0.20 * z.imag\n-//     GAM1C += -0.012 * z.real\n-//     SINPI += -0.0043 * z.real\n-\n-//     # AddSol(-1.167000, -1.250000, 0.008000, -0.010600, 1.000000, 2.000000, 0.000000, 0.000000)\n-//     z = ex[1][1] * ex[2][2]\n-//     DLAM  += -1.167 * z.imag\n-//     DS    += -1.25 * z.imag\n-//     GAM1C += 0.008 * z.real\n-//     SINPI += -0.0106 * z.real\n-\n-//     # AddSol(-7.412000, -6.120000, 0.117000, 0.048400, 1.000000, 2.000000, 0.000000, -2.000000)\n-//     z = ex[1][1] * ex[2][2] * ex[-2][4]\n-//     DLAM  += -7.412 * z.imag\n-//     DS    += -6.12 * z.imag\n-//     GAM1C += 0.117 * z.real\n-//     SINPI += 0.0484 * z.real\n-\n-//     # AddSol(-0.311000, -0.650000, -0.032000, 0.004400, 1.000000, 2.000000, 0.000000, -4.000000)\n-//     z = ex[1][1] * ex[2][2] * ex[-4][4]\n-//     DLAM  += -0.311 * z.imag\n-//     DS    += -0.65 * z.imag\n-//     GAM1C += -0.032 * z.real\n-//     SINPI += 0.0044 * z.real\n-\n-//     # AddSol(0.757000, 1.820000, -0.105000, 0.011200, 1.000000, -2.000000, 0.000000, 2.000000)\n-//     z = ex[1][1] * ex[-2][2] * ex[2][4]\n-//     DLAM  += 0.757 * z.imag\n-//     DS    += 1.82 * z.imag\n-//     GAM1C += -0.105 * z.real\n-//     SINPI += 0.0112 * z.real\n-\n-//     # AddSol(2.580000, 2.320000, 0.027000, 0.019600, 1.000000, -2.000000, 0.000000, 0.000000)\n-//     z = ex[1][1] * ex[-2][2]\n-//     DLAM  += 2.580 * z.imag\n-//     DS    += 2.32 * z.imag\n-//     GAM1C += 0.027 * z.real\n-//     SINPI += 0.0196 * z.real\n-\n-//     # AddSol(2.533000, 2.400000, -0.014000, -0.021200, 1.000000, -2.000000, 0.000000, -2.000000)\n-//     z = ex[1][1] * ex[-2][2] * ex[-2][4]\n-//     DLAM  += 2.533 * z.imag\n-//     DS    += 2.40 * z.imag\n-//     GAM1C += -0.014 * z.real\n-//     SINPI += -0.0212 * z.real\n-\n-//     # AddSol(-0.344000, -0.570000, -0.025000, 0.003600, 0.000000, 3.000000, 0.000000, -2.000000)\n-//     z = ex[3][2] * ex[-2][4]\n-//     DLAM  += -0.344 * z.imag\n-//     DS    += -0.57 * z.imag\n-//     GAM1C += -0.025 * z.real\n-//     SINPI += 0.0036 * z.real\n-\n-//     # AddSol(-0.992000, -0.020000, 0.000000, 0.000000, 1.000000, 0.000000, 2.000000, 2.000000)\n-//     z = ex[1][1] * ex[2][3] * ex[2][4]\n-//     DLAM  += -0.992 * z.imag\n-//     DS    += -0.02 * z.imag\n-\n-//     # AddSol(-45.099000, -0.020000, 0.000000, -0.001000, 1.000000, 0.000000, 2.000000, 0.000000)\n-//     z = ex[1][1] * ex[2][3]\n-//     DLAM  += -45.099 * z.imag\n-//     DS    += -0.02 * z.imag\n-//     SINPI += -0.0010 * z.real\n-\n-//     # AddSol(-0.179000, -9.520000, 0.000000, -0.083300, 1.000000, 0.000000, 2.000000, -2.000000)\n-//     z = ex[1][1] * ex[2][3] * ex[-2][4]\n-//     DLAM  += -0.179 * z.imag\n-//     DS    += -9.52 * z.imag\n-//     SINPI += -0.0833 * z.real\n-\n-//     # AddSol(-0.301000, -0.330000, 0.000000, 0.001400, 1.000000, 0.000000, 2.000000, -4.000000)\n-//     z = ex[1][1] * ex[2][3] * ex[-4][4]\n-//     DLAM  += -0.301 * z.imag\n-//     DS    += -0.33 * z.imag\n-//     SINPI += 0.0014 * z.real\n-\n-//     # AddSol(-6.382000, -3.370000, 0.000000, -0.048100, 1.000000, 0.000000, -2.000000, 2.000000)\n-//     z = ex[1][1] * ex[-2][3] * ex[2][4]\n-//     DLAM  += -6.382 * z.imag\n-//     DS    += -3.37 * z.imag\n-//     SINPI += -0.0481 * z.real\n-\n-//     # AddSol(39.528000, 85.130000, 0.000000, -0.713600, 1.000000, 0.000000, -2.000000, 0.000000)\n-//     z = ex[1][1] * ex[-2][3]\n-//     DLAM  += 39.528 * z.imag\n-//     DS    += 85.13 * z.imag\n-//     SINPI += -0.7136 * z.real\n-\n-//     # AddSol(9.366000, 0.710000, 0.000000, -0.011200, 1.000000, 0.000000, -2.000000, -2.000000)\n-//     z = ex[1][1] * ex[-2][3] * ex[-2][4]\n-//     DLAM  += 9.366 * z.imag\n-//     DS    += 0.71 * z.imag\n-//     SINPI += -0.0112 * z.real\n-\n-//     # AddSol(0.202000, 0.020000, 0.000000, 0.000000, 1.000000, 0.000000, -2.000000, -4.000000)\n-//     z = ex[1][1] * ex[-2][3] * ex[-4][4]\n-//     DLAM  += 0.202 * z.imag\n-//     DS    += 0.02 * z.imag\n-\n-//     # AddSol(0.415000, 0.100000, 0.000000, 0.001300, 0.000000, 1.000000, 2.000000, 0.000000)\n-//     z = ex[1][2] * ex[2][3]\n-//     DLAM  += 0.415 * z.imag\n-//     DS    += 0.10 * z.imag\n-//     SINPI += 0.0013 * z.real\n-\n-//     # AddSol(-2.152000, -2.260000, 0.000000, -0.006600, 0.000000, 1.000000, 2.000000, -2.000000)\n-//     z = ex[1][2] * ex[2][3] * ex[-2][4]\n-//     DLAM  += -2.152 * z.imag\n-//     DS    += -2.26 * z.imag\n-//     SINPI += -0.0066 * z.real\n-\n-//     # AddSol(-1.440000, -1.300000, 0.000000, 0.001400, 0.000000, 1.000000, -2.000000, 2.000000)\n-//     z = ex[1][2] * ex[-2][3] * ex[2][4]\n-//     DLAM  += -1.440 * z.imag\n-//     DS    += -1.30 * z.imag\n-//     SINPI += 0.0014 * z.real\n-\n-//     # AddSol(0.384000, -0.040000, 0.000000, 0.000000, 0.000000, 1.000000, -2.000000, -2.000000)\n-//     z = ex[1][2] * ex[-2][3] * ex[-2][4]\n-//     DLAM  += 0.384 * z.imag\n-//     DS    += -0.04 * z.imag\n-\n-//     # AddSol(1.938000, 3.600000, -0.145000, 0.040100, 4.000000, 0.000000, 0.000000, 0.000000)\n-//     z = ex[4][1]\n-//     DLAM  += 1.938 * z.imag\n-//     DS    += 3.60 * z.imag\n-//     GAM1C += -0.145 * z.real\n-//     SINPI += 0.0401 * z.real\n-\n-//     # AddSol(-0.952000, -1.580000, 0.052000, -0.013000, 4.000000, 0.000000, 0.000000, -2.000000)\n-//     z = ex[4][1] * ex[-2][4]\n-//     DLAM  += -0.952 * z.imag\n-//     DS    += -1.58 * z.imag\n-//     GAM1C += 0.052 * z.real\n-//     SINPI += -0.0130 * z.real\n-\n-//     # AddSol(-0.551000, -0.940000, 0.032000, -0.009700, 3.000000, 1.000000, 0.000000, 0.000000)\n-//     z = ex[3][1] * ex[1][2]\n-//     DLAM  += -0.551 * z.imag\n-//     DS    += -0.94 * z.imag\n-//     GAM1C += 0.032 * z.real\n-//     SINPI += -0.0097 * z.real\n-\n-//     # AddSol(-0.482000, -0.570000, 0.005000, -0.004500, 3.000000, 1.000000, 0.000000, -2.000000)\n-//     z = ex[3][1] * ex[1][2] * ex[-2][4]\n-//     DLAM  += -0.482 * z.imag\n-//     DS    += -0.57 * z.imag\n-//     GAM1C += 0.005 * z.real\n-//     SINPI += -0.0045 * z.real\n-\n-//     # AddSol(0.681000, 0.960000, -0.026000, 0.011500, 3.000000, -1.000000, 0.000000, 0.000000)\n-//     z = ex[3][1] * ex[-1][2]\n-//     DLAM  += 0.681 * z.imag\n-//     DS    += 0.96 * z.imag\n-//     GAM1C += -0.026 * z.real\n-//     SINPI += 0.0115 * z.real\n-\n-//     # AddSol(-0.297000, -0.270000, 0.002000, -0.000900, 2.000000, 2.000000, 0.000000, -2.000000)\n-//     z = ex[2][1] * ex[2][2] * ex[-2][4]\n-//     DLAM  += -0.297 * z.imag\n-//     DS    += -0.27 * z.imag\n-//     GAM1C += 0.002 * z.real\n-//     SINPI += -0.0009 * z.real\n-\n-//     # AddSol(0.254000, 0.210000, -0.003000, 0.000000, 2.000000, -2.000000, 0.000000, -2.000000)\n-//     z = ex[2][1] * ex[-2][2] * ex[-2][4]\n-//     DLAM  += 0.254 * z.imag\n-//     DS    += 0.21 * z.imag\n-//     GAM1C += -0.003 * z.real\n-\n-//     # AddSol(-0.250000, -0.220000, 0.004000, 0.001400, 1.000000, 3.000000, 0.000000, -2.000000)\n-//     z = ex[1][1] * ex[3][2] * ex[-2][4]\n-//     DLAM  += -0.250 * z.imag\n-//     DS    += -0.22 * z.imag\n-//     GAM1C += 0.004 * z.real\n-//     SINPI += 0.0014 * z.real\n-\n-//     # AddSol(-3.996000, 0.000000, 0.000000, 0.000400, 2.000000, 0.000000, 2.000000, 0.000000)\n-//     z = ex[2][1] * ex[2][3]\n-//     DLAM  += -3.996 * z.imag\n-//     SINPI += 0.0004 * z.real\n-\n-//     # AddSol(0.557000, -0.750000, 0.000000, -0.009000, 2.000000, 0.000000, 2.000000, -2.000000)\n-//     z = ex[2][1] * ex[2][3] * ex[-2][4]\n-//     DLAM  += 0.557 * z.imag\n-//     DS    += -0.75 * z.imag\n-//     SINPI += -0.0090 * z.real\n-\n-//     # AddSol(-0.459000, -0.380000, 0.000000, -0.005300, 2.000000, 0.000000, -2.000000, 2.000000)\n-//     z = ex[2][1] * ex[-2][3] * ex[2][4]\n-//     DLAM  += -0.459 * z.imag\n-//     DS    += -0.38 * z.imag\n-//     SINPI += -0.0053 * z.real\n-\n-//     # AddSol(-1.298000, 0.740000, 0.000000, 0.000400, 2.000000, 0.000000, -2.000000, 0.000000)\n-//     z = ex[2][1] * ex[-2][3]\n-//     DLAM  += -1.298 * z.imag\n-//     DS    += 0.74 * z.imag\n-//     SINPI += 0.0004 * z.real\n-\n-//     # AddSol(0.538000, 1.140000, 0.000000, -0.014100, 2.000000, 0.000000, -2.000000, -2.000000)\n-//     z = ex[2][1] * ex[-2][3] * ex[-2][4]\n-//     DLAM  += 0.538 * z.imag\n-//     DS    += 1.14 * z.imag\n-//     SINPI += -0.0141 * z.real\n-\n-//     # AddSol(0.263000, 0.020000, 0.000000, 0.000000, 1.000000, 1.000000, 2.000000, 0.000000)\n-//     z = ex[1][1] * ex[1][2] * ex[2][3]\n-//     DLAM  += 0.263 * z.imag\n-//     DS    += 0.02 * z.imag\n-\n-//     # AddSol(0.426000, 0.070000, 0.000000, -0.000600, 1.000000, 1.000000, -2.000000, -2.000000)\n-//     z = ex[1][1] * ex[1][2] * ex[-2][3] * ex[-2][4]\n-//     DLAM  += 0.426 * z.imag\n-//     DS    += 0.07 * z.imag\n-//     SINPI += -0.0006 * z.real\n-\n-//     # AddSol(-0.304000, 0.030000, 0.000000, 0.000300, 1.000000, -1.000000, 2.000000, 0.000000)\n-//     z = ex[1][1] * ex[-1][2] * ex[2][3]\n-//     DLAM  += -0.304 * z.imag\n-//     DS    += 0.03 * z.imag\n-//     SINPI += 0.0003 * z.real\n-\n-//     # AddSol(-0.372000, -0.190000, 0.000000, -0.002700, 1.000000, -1.000000, -2.000000, 2.000000)\n-//     z = ex[1][1] * ex[-1][2] * ex[-2][3] * ex[2][4]\n-//     DLAM  += -0.372 * z.imag\n-//     DS    += -0.19 * z.imag\n-//     SINPI += -0.0027 * z.real\n-\n-//     # AddSol(0.418000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 4.000000, 0.000000)\n-//     z = ex[4][3]\n-//     DLAM  += 0.418 * z.imag\n-\n-//     # AddSol(-0.330000, -0.040000, 0.000000, 0.000000, 3.000000, 0.000000, 2.000000, 0.000000)\n-//     z = ex[3][1] * ex[2][3]\n-//     DLAM  += -0.330 * z.imag\n-//     DS    += -0.04 * z.imag\n-\n-\n //     def ADDN(coeffn, p, q, r, s):\n //         return coeffn * (ex[p][1] * ex[q][2] * ex[r][3] * ex[s][4]).imag\n \n //     N = 0\n"
                },
                {
                    "date": 1641786480882,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -80,45 +80,59 @@\n     var D = _PI2 * Frac(0.82736186 + 1236.85308708 * T - 0.00000397 * T2) +\n         DD / _ARC;\n \n     var I = 1;\n-    var ARG,MAX,FAC,J;\n+    var ARG, MAX, FAC, J;\n     while (I <= 4) {\n-      if (I == 1) {ARG=L; MAX=4; FAC=1.000002208;}    \n-      if (I == 2)\n-          {ARG=LS; MAX=3; FAC=0.997504612-0.002495388*T;}\n-      if (I == 3)\n-          {ARG=F; MAX=4; FAC=1.000002708+139.978*DGAM;}\n-      else\n-          {ARG=D; MAX=6; FAC=1.0;}\n+      if (I == 1) {\n+        ARG = L;\n+        MAX = 4;\n+        FAC = 1.000002208;\n+      }\n+      if (I == 2) {\n+        ARG = LS;\n+        MAX = 3;\n+        FAC = 0.997504612 - 0.002495388 * T;\n+      }\n+      if (I == 3) {\n+        ARG = F;\n+        MAX = 4;\n+        FAC = 1.000002708 + 139.978 * DGAM;\n+      } else {\n+        ARG = D;\n+        MAX = 6;\n+        FAC = 1.0;\n+      }\n \n-      var ex[0][I] = complex(1, 0);\n-      var ex[1][I] = complex(FAC * cos(ARG), FAC * sin(ARG));\n+      // var ex[0][I] = complex(1, 0);\n+      // var ex[1][I] = complex(FAC * cos(ARG), FAC * sin(ARG));\n \n       J = 2;\n-      while (J <= MAX)\n-          {ex[J][I] = ex[J-1][I] * ex[1][I];\n-          J += 1;}\n+      while (J <= MAX) {\n+        ex[J][I] = ex[J - 1][I] * ex[1][I];\n+        J += 1;\n+      }\n \n       J = 1;\n-      while (J <= MAX)\n-          {ex[-J][I] = ex[J][I].conjugate();\n-          J += 1;}\n-        \n+      while (J <= MAX) {\n+        ex[-J][I] = ex[J][I].conjugate();\n+        J += 1;\n+      }\n+\n       I++;\n     }\n-  \n+\n     // AddSol(13.902000, 14.060000, -0.001000, 0.260700, 0.000000, 0.000000, 0.000000, 4.000000)\n     var z = ex[4][4];\n-    DLAM  += (13.902 * z.imag) as int;\n-    DS    += (14.06 * z.imag) as int;\n+    DLAM += (13.902 * z.imag) as int;\n+    DS += (14.06 * z.imag) as int;\n     GAM1C += (-0.001 * z.real) as int;\n     SINPI += 0.2607 * z.real;\n+  }\n \n-\n+  int complex(int i, int j) {\n+    return i;\n   }\n-\n-  int complex(int i, int j) {return i;}\n }\n \n // # AddSol\n // # AddSol ....\n"
                },
                {
                    "date": 1641797605748,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n // ignore_for_file: non_constant_identifier_names, prefer_typing_uninitialized_variables, camel_case_types, unused_local_variable, unused_element\n \n import 'dart:math';\n+import 'classes.dart';\n \n var _PI2 = 2.0 * pi;\n var KM_PER_AU = 1.4959787069098932e+8;\n var _EARTH_FLATTENING = 0.996647180302104;\n@@ -34,8 +35,9 @@\n     // _CalcMoonCount += 1;\n \n     var T = time.tt / 36525;\n     var ex = _Array2(-6, 6, 1, 4);\n+    print(ex.runtimeType);\n \n     double Sine(double phi) => sin(_PI2 * phi);\n \n     double Frac(double x) => x - x.floor();\n"
                },
                {
                    "date": 1641799347943,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,8 +32,9 @@\n \n   dynamic _CalcMoon(time) {\n     // var _CalcMoonCount;\n     // _CalcMoonCount += 1;\n+    // time сделать класс Time / tt.ut\n \n     var T = time.tt / 36525;\n     var ex = _Array2(-6, 6, 1, 4);\n     print(ex.runtimeType);\n"
                },
                {
                    "date": 1641809739664,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-// ignore_for_file: non_constant_identifier_names, prefer_typing_uninitialized_variables, camel_case_types, unused_local_variable, unused_element\n+// ignore_for_file: non_constant_identifier_names, prefer_typing_uninitialized_variables, camel_case_types, unused_local_variable, unused_element, unused_import\n \n import 'dart:math';\n import 'classes.dart';\n \n"
                }
            ],
            "date": 1641624990956,
            "name": "Commit-0",
            "content": "// import math\n\n// # BEGIN CalcMoon\n\n// _PI2 = 2.0 * math.pi\n// KM_PER_AU = 1.4959787069098932e+8\n// _EARTH_FLATTENING = 0.996647180302104\n// _EARTH_EQUATORIAL_RADIUS_KM = 6378.1366\n// _EARTH_POLAR_RADIUS_KM = _EARTH_EQUATORIAL_RADIUS_KM * _EARTH_FLATTENING\n// _EARTH_EQUATORIAL_RADIUS_AU = _EARTH_EQUATORIAL_RADIUS_KM / KM_PER_AU\n// _ARC = 3600.0 * 180.0 / math.pi \n\n// def _Array1(xmin, xmax):\n//     return dict((key, 0j) for key in range(xmin, 1+xmax))\n\n// def _Array2(xmin, xmax, ymin, ymax):\n//     return dict((key, _Array1(ymin, ymax)) for key in range(xmin, 1+xmax))\n\n// class _moonpos:\n//     def __init__(self, lon, lat, dist):\n//         self.geo_eclip_lon = lon\n//         self.geo_eclip_lat = lat\n//         self.distance_au = dist\n\n// def _CalcMoon(time):\n//     # global _CalcMoonCount\n//     # _CalcMoonCount += 1\n\n//     T = time.tt / 36525\n//     ex = _Array2(-6, 6, 1, 4)\n\n//     def Sine(phi):\n//         return math.sin(_PI2 * phi)\n\n//     def Frac(x):\n//         return x - math.floor(x)\n\n//     T2 = T*T\n//     DLAM = 0\n//     DS = 0\n//     GAM1C = 0\n//     SINPI = 3422.7000\n//     S1 = Sine(0.19833+0.05611*T)\n//     S2 = Sine(0.27869+0.04508*T)\n//     S3 = Sine(0.16827-0.36903*T)\n//     S4 = Sine(0.34734-5.37261*T)\n//     S5 = Sine(0.10498-5.37899*T)\n//     S6 = Sine(0.42681-0.41855*T)\n//     S7 = Sine(0.14943-5.37511*T)\n//     DL0 = 0.84*S1+0.31*S2+14.27*S3+ 7.26*S4+ 0.28*S5+0.24*S6\n//     DL  = 2.94*S1+0.31*S2+14.27*S3+ 9.34*S4+ 1.12*S5+0.83*S6\n//     DLS =-6.40*S1                                   -1.89*S6\n//     DF  = 0.21*S1+0.31*S2+14.27*S3-88.70*S4-15.30*S5+0.24*S6-1.86*S7\n//     DD  = DL0-DLS\n//     DGAM  = ((-3332E-9 * Sine(0.59734-5.37261*T)\n//                -539E-9 * Sine(0.35498-5.37899*T)\n//                 -64E-9 * Sine(0.39943-5.37511*T)))\n\n//     L0 = _PI2*Frac(0.60643382+1336.85522467*T-0.00000313*T2) + DL0/_ARC\n//     L  = _PI2*Frac(0.37489701+1325.55240982*T+0.00002565*T2) + DL /_ARC\n//     LS = _PI2*Frac(0.99312619+  99.99735956*T-0.00000044*T2) + DLS/_ARC\n//     F  = _PI2*Frac(0.25909118+1342.22782980*T-0.00000892*T2) + DF /_ARC\n//     D  = _PI2*Frac(0.82736186+1236.85308708*T-0.00000397*T2) + DD /_ARC\n\n//     I = 1\n//     while I <= 4:\n//         if I == 1:\n//             ARG=L; MAX=4; FAC=1.000002208\n//         elif I == 2:\n//             ARG=LS; MAX=3; FAC=0.997504612-0.002495388*T\n//         elif I == 3:\n//             ARG=F; MAX=4; FAC=1.000002708+139.978*DGAM\n//         else:\n//             ARG=D; MAX=6; FAC=1.0\n\n//         ex[0][I] = complex(1, 0)\n//         ex[1][I] = complex(FAC * math.cos(ARG), FAC * math.sin(ARG))\n\n//         J = 2\n//         while J <= MAX:\n//             ex[J][I] = ex[J-1][I] * ex[1][I]\n//             J += 1\n\n//         J = 1\n//         while J <= MAX:\n//             ex[-J][I] = ex[J][I].conjugate()\n//             J += 1\n//         I += 1\n\n//     # AddSol(13.902000, 14.060000, -0.001000, 0.260700, 0.000000, 0.000000, 0.000000, 4.000000)\n//     z = ex[4][4]\n//     DLAM  += 13.902 * z.imag\n//     DS    += 14.06 * z.imag\n//     GAM1C += -0.001 * z.real\n//     SINPI += 0.2607 * z.real\n\n//     # AddSol(0.403000, -4.010000, 0.394000, 0.002300, 0.000000, 0.000000, 0.000000, 3.000000)\n//     z = ex[3][4]\n//     DLAM  += 0.403 * z.imag\n//     DS    += -4.01 * z.imag\n//     GAM1C += 0.394 * z.real\n//     SINPI += 0.0023 * z.real\n\n//     # AddSol(2369.912000, 2373.360000, 0.601000, 28.233300, 0.000000, 0.000000, 0.000000, 2.000000)\n//     z = ex[2][4]\n//     DLAM  += 2369.912 * z.imag\n//     DS    += 2373.36 * z.imag\n//     GAM1C += 0.601 * z.real\n//     SINPI += 28.2333 * z.real\n\n//     # AddSol(-125.154000, -112.790000, -0.725000, -0.978100, 0.000000, 0.000000, 0.000000, 1.000000)\n//     z = ex[1][4]\n//     DLAM  += -125.154 * z.imag\n//     DS    += -112.79 * z.imag\n//     GAM1C += -0.725 * z.real\n//     SINPI += -0.9781 * z.real\n\n//     # AddSol(1.979000, 6.980000, -0.445000, 0.043300, 1.000000, 0.000000, 0.000000, 4.000000)\n//     z = ex[1][1] * ex[4][4]\n//     DLAM  += 1.979 * z.imag\n//     DS    += 6.98 * z.imag\n//     GAM1C += -0.445 * z.real\n//     SINPI += 0.0433 * z.real\n\n//     # AddSol(191.953000, 192.720000, 0.029000, 3.086100, 1.000000, 0.000000, 0.000000, 2.000000)\n//     z = ex[1][1] * ex[2][4]\n//     DLAM  += 191.953 * z.imag\n//     DS    += 192.72 * z.imag\n//     GAM1C += 0.029 * z.real\n//     SINPI += 3.0861 * z.real\n\n//     # AddSol(-8.466000, -13.510000, 0.455000, -0.109300, 1.000000, 0.000000, 0.000000, 1.000000)\n//     z = ex[1][1] * ex[1][4]\n//     DLAM  += -8.466 * z.imag\n//     DS    += -13.51 * z.imag\n//     GAM1C += 0.455 * z.real\n//     SINPI += -0.1093 * z.real\n\n//     # AddSol(22639.500000, 22609.070000, 0.079000, 186.539800, 1.000000, 0.000000, 0.000000, 0.000000)\n//     z = ex[1][1]\n//     DLAM  += 22639.500 * z.imag\n//     DS    += 22609.07 * z.imag\n//     GAM1C += 0.079 * z.real\n//     SINPI += 186.5398 * z.real\n\n//     # AddSol(18.609000, 3.590000, -0.094000, 0.011800, 1.000000, 0.000000, 0.000000, -1.000000)\n//     z = ex[1][1] * ex[-1][4]\n//     DLAM  += 18.609 * z.imag\n//     DS    += 3.59 * z.imag\n//     GAM1C += -0.094 * z.real\n//     SINPI += 0.0118 * z.real\n\n//     # AddSol(-4586.465000, -4578.130000, -0.077000, 34.311700, 1.000000, 0.000000, 0.000000, -2.000000)\n//     z = ex[1][1] * ex[-2][4]\n//     DLAM  += -4586.465 * z.imag\n//     DS    += -4578.13 * z.imag\n//     GAM1C += -0.077 * z.real\n//     SINPI += 34.3117 * z.real\n\n//     # AddSol(3.215000, 5.440000, 0.192000, -0.038600, 1.000000, 0.000000, 0.000000, -3.000000)\n//     z = ex[1][1] * ex[-3][4]\n//     DLAM  += 3.215 * z.imag\n//     DS    += 5.44 * z.imag\n//     GAM1C += 0.192 * z.real\n//     SINPI += -0.0386 * z.real\n\n//     # AddSol(-38.428000, -38.640000, 0.001000, 0.600800, 1.000000, 0.000000, 0.000000, -4.000000)\n//     z = ex[1][1] * ex[-4][4]\n//     DLAM  += -38.428 * z.imag\n//     DS    += -38.64 * z.imag\n//     GAM1C += 0.001 * z.real\n//     SINPI += 0.6008 * z.real\n\n//     # AddSol(-0.393000, -1.430000, -0.092000, 0.008600, 1.000000, 0.000000, 0.000000, -6.000000)\n//     z = ex[1][1] * ex[-6][4]\n//     DLAM  += -0.393 * z.imag\n//     DS    += -1.43 * z.imag\n//     GAM1C += -0.092 * z.real\n//     SINPI += 0.0086 * z.real\n\n//     # AddSol(-0.289000, -1.590000, 0.123000, -0.005300, 0.000000, 1.000000, 0.000000, 4.000000)\n//     z = ex[1][2] * ex[4][4]\n//     DLAM  += -0.289 * z.imag\n//     DS    += -1.59 * z.imag\n//     GAM1C += 0.123 * z.real\n//     SINPI += -0.0053 * z.real\n\n//     # AddSol(-24.420000, -25.100000, 0.040000, -0.300000, 0.000000, 1.000000, 0.000000, 2.000000)\n//     z = ex[1][2] * ex[2][4]\n//     DLAM  += -24.420 * z.imag\n//     DS    += -25.10 * z.imag\n//     GAM1C += 0.040 * z.real\n//     SINPI += -0.3000 * z.real\n\n//     # AddSol(18.023000, 17.930000, 0.007000, 0.149400, 0.000000, 1.000000, 0.000000, 1.000000)\n//     z = ex[1][2] * ex[1][4]\n//     DLAM  += 18.023 * z.imag\n//     DS    += 17.93 * z.imag\n//     GAM1C += 0.007 * z.real\n//     SINPI += 0.1494 * z.real\n\n//     # AddSol(-668.146000, -126.980000, -1.302000, -0.399700, 0.000000, 1.000000, 0.000000, 0.000000)\n//     z = ex[1][2]\n//     DLAM  += -668.146 * z.imag\n//     DS    += -126.98 * z.imag\n//     GAM1C += -1.302 * z.real\n//     SINPI += -0.3997 * z.real\n\n//     # AddSol(0.560000, 0.320000, -0.001000, -0.003700, 0.000000, 1.000000, 0.000000, -1.000000)\n//     z = ex[1][2] * ex[-1][4]\n//     DLAM  += 0.560 * z.imag\n//     DS    += 0.32 * z.imag\n//     GAM1C += -0.001 * z.real\n//     SINPI += -0.0037 * z.real\n\n//     # AddSol(-165.145000, -165.060000, 0.054000, 1.917800, 0.000000, 1.000000, 0.000000, -2.000000)\n//     z = ex[1][2] * ex[-2][4]\n//     DLAM  += -165.145 * z.imag\n//     DS    += -165.06 * z.imag\n//     GAM1C += 0.054 * z.real\n//     SINPI += 1.9178 * z.real\n\n//     # AddSol(-1.877000, -6.460000, -0.416000, 0.033900, 0.000000, 1.000000, 0.000000, -4.000000)\n//     z = ex[1][2] * ex[-4][4]\n//     DLAM  += -1.877 * z.imag\n//     DS    += -6.46 * z.imag\n//     GAM1C += -0.416 * z.real\n//     SINPI += 0.0339 * z.real\n\n//     # AddSol(0.213000, 1.020000, -0.074000, 0.005400, 2.000000, 0.000000, 0.000000, 4.000000)\n//     z = ex[2][1] * ex[4][4]\n//     DLAM  += 0.213 * z.imag\n//     DS    += 1.02 * z.imag\n//     GAM1C += -0.074 * z.real\n//     SINPI += 0.0054 * z.real\n\n//     # AddSol(14.387000, 14.780000, -0.017000, 0.283300, 2.000000, 0.000000, 0.000000, 2.000000)\n//     z = ex[2][1] * ex[2][4]\n//     DLAM  += 14.387 * z.imag\n//     DS    += 14.78 * z.imag\n//     GAM1C += -0.017 * z.real\n//     SINPI += 0.2833 * z.real\n\n//     # AddSol(-0.586000, -1.200000, 0.054000, -0.010000, 2.000000, 0.000000, 0.000000, 1.000000)\n//     z = ex[2][1] * ex[1][4]\n//     DLAM  += -0.586 * z.imag\n//     DS    += -1.20 * z.imag\n//     GAM1C += 0.054 * z.real\n//     SINPI += -0.0100 * z.real\n\n//     # AddSol(769.016000, 767.960000, 0.107000, 10.165700, 2.000000, 0.000000, 0.000000, 0.000000)\n//     z = ex[2][1]\n//     DLAM  += 769.016 * z.imag\n//     DS    += 767.96 * z.imag\n//     GAM1C += 0.107 * z.real\n//     SINPI += 10.1657 * z.real\n\n//     # AddSol(1.750000, 2.010000, -0.018000, 0.015500, 2.000000, 0.000000, 0.000000, -1.000000)\n//     z = ex[2][1] * ex[-1][4]\n//     DLAM  += 1.750 * z.imag\n//     DS    += 2.01 * z.imag\n//     GAM1C += -0.018 * z.real\n//     SINPI += 0.0155 * z.real\n\n//     # AddSol(-211.656000, -152.530000, 5.679000, -0.303900, 2.000000, 0.000000, 0.000000, -2.000000)\n//     z = ex[2][1] * ex[-2][4]\n//     DLAM  += -211.656 * z.imag\n//     DS    += -152.53 * z.imag\n//     GAM1C += 5.679 * z.real\n//     SINPI += -0.3039 * z.real\n\n//     # AddSol(1.225000, 0.910000, -0.030000, -0.008800, 2.000000, 0.000000, 0.000000, -3.000000)\n//     z = ex[2][1] * ex[-3][4]\n//     DLAM  += 1.225 * z.imag\n//     DS    += 0.91 * z.imag\n//     GAM1C += -0.030 * z.real\n//     SINPI += -0.0088 * z.real\n\n//     # AddSol(-30.773000, -34.070000, -0.308000, 0.372200, 2.000000, 0.000000, 0.000000, -4.000000)\n//     z = ex[2][1] * ex[-4][4]\n//     DLAM  += -30.773 * z.imag\n//     DS    += -34.07 * z.imag\n//     GAM1C += -0.308 * z.real\n//     SINPI += 0.3722 * z.real\n\n//     # AddSol(-0.570000, -1.400000, -0.074000, 0.010900, 2.000000, 0.000000, 0.000000, -6.000000)\n//     z = ex[2][1] * ex[-6][4]\n//     DLAM  += -0.570 * z.imag\n//     DS    += -1.40 * z.imag\n//     GAM1C += -0.074 * z.real\n//     SINPI += 0.0109 * z.real\n\n//     # AddSol(-2.921000, -11.750000, 0.787000, -0.048400, 1.000000, 1.000000, 0.000000, 2.000000)\n//     z = ex[1][1] * ex[1][2] * ex[2][4]\n//     DLAM  += -2.921 * z.imag\n//     DS    += -11.75 * z.imag\n//     GAM1C += 0.787 * z.real\n//     SINPI += -0.0484 * z.real\n\n//     # AddSol(1.267000, 1.520000, -0.022000, 0.016400, 1.000000, 1.000000, 0.000000, 1.000000)\n//     z = ex[1][1] * ex[1][2] * ex[1][4]\n//     DLAM  += 1.267 * z.imag\n//     DS    += 1.52 * z.imag\n//     GAM1C += -0.022 * z.real\n//     SINPI += 0.0164 * z.real\n\n//     # AddSol(-109.673000, -115.180000, 0.461000, -0.949000, 1.000000, 1.000000, 0.000000, 0.000000)\n//     z = ex[1][1] * ex[1][2]\n//     DLAM  += -109.673 * z.imag\n//     DS    += -115.18 * z.imag\n//     GAM1C += 0.461 * z.real\n//     SINPI += -0.9490 * z.real\n\n//     # AddSol(-205.962000, -182.360000, 2.056000, 1.443700, 1.000000, 1.000000, 0.000000, -2.000000)\n//     z = ex[1][1] * ex[1][2] * ex[-2][4]\n//     DLAM  += -205.962 * z.imag\n//     DS    += -182.36 * z.imag\n//     GAM1C += 2.056 * z.real\n//     SINPI += 1.4437 * z.real\n\n//     # AddSol(0.233000, 0.360000, 0.012000, -0.002500, 1.000000, 1.000000, 0.000000, -3.000000)\n//     z = ex[1][1] * ex[1][2] * ex[-3][4]\n//     DLAM  += 0.233 * z.imag\n//     DS    += 0.36 * z.imag\n//     GAM1C += 0.012 * z.real\n//     SINPI += -0.0025 * z.real\n\n//     # AddSol(-4.391000, -9.660000, -0.471000, 0.067300, 1.000000, 1.000000, 0.000000, -4.000000)\n//     z = ex[1][1] * ex[1][2] * ex[-4][4]\n//     DLAM  += -4.391 * z.imag\n//     DS    += -9.66 * z.imag\n//     GAM1C += -0.471 * z.real\n//     SINPI += 0.0673 * z.real\n\n//     # AddSol(0.283000, 1.530000, -0.111000, 0.006000, 1.000000, -1.000000, 0.000000, 4.000000)\n//     z = ex[1][1] * ex[-1][2] * ex[4][4]\n//     DLAM  += 0.283 * z.imag\n//     DS    += 1.53 * z.imag\n//     GAM1C += -0.111 * z.real\n//     SINPI += 0.0060 * z.real\n\n//     # AddSol(14.577000, 31.700000, -1.540000, 0.230200, 1.000000, -1.000000, 0.000000, 2.000000)\n//     z = ex[1][1] * ex[-1][2] * ex[2][4]\n//     DLAM  += 14.577 * z.imag\n//     DS    += 31.70 * z.imag\n//     GAM1C += -1.540 * z.real\n//     SINPI += 0.2302 * z.real\n\n//     # AddSol(147.687000, 138.760000, 0.679000, 1.152800, 1.000000, -1.000000, 0.000000, 0.000000)\n//     z = ex[1][1] * ex[-1][2]\n//     DLAM  += 147.687 * z.imag\n//     DS    += 138.76 * z.imag\n//     GAM1C += 0.679 * z.real\n//     SINPI += 1.1528 * z.real\n\n//     # AddSol(-1.089000, 0.550000, 0.021000, 0.000000, 1.000000, -1.000000, 0.000000, -1.000000)\n//     z = ex[1][1] * ex[-1][2] * ex[-1][4]\n//     DLAM  += -1.089 * z.imag\n//     DS    += 0.55 * z.imag\n//     GAM1C += 0.021 * z.real\n\n//     # AddSol(28.475000, 23.590000, -0.443000, -0.225700, 1.000000, -1.000000, 0.000000, -2.000000)\n//     z = ex[1][1] * ex[-1][2] * ex[-2][4]\n//     DLAM  += 28.475 * z.imag\n//     DS    += 23.59 * z.imag\n//     GAM1C += -0.443 * z.real\n//     SINPI += -0.2257 * z.real\n\n//     # AddSol(-0.276000, -0.380000, -0.006000, -0.003600, 1.000000, -1.000000, 0.000000, -3.000000)\n//     z = ex[1][1] * ex[-1][2] * ex[-3][4]\n//     DLAM  += -0.276 * z.imag\n//     DS    += -0.38 * z.imag\n//     GAM1C += -0.006 * z.real\n//     SINPI += -0.0036 * z.real\n\n//     # AddSol(0.636000, 2.270000, 0.146000, -0.010200, 1.000000, -1.000000, 0.000000, -4.000000)\n//     z = ex[1][1] * ex[-1][2] * ex[-4][4]\n//     DLAM  += 0.636 * z.imag\n//     DS    += 2.27 * z.imag\n//     GAM1C += 0.146 * z.real\n//     SINPI += -0.0102 * z.real\n\n//     # AddSol(-0.189000, -1.680000, 0.131000, -0.002800, 0.000000, 2.000000, 0.000000, 2.000000)\n//     z = ex[2][2] * ex[2][4]\n//     DLAM  += -0.189 * z.imag\n//     DS    += -1.68 * z.imag\n//     GAM1C += 0.131 * z.real\n//     SINPI += -0.0028 * z.real\n\n//     # AddSol(-7.486000, -0.660000, -0.037000, -0.008600, 0.000000, 2.000000, 0.000000, 0.000000)\n//     z = ex[2][2]\n//     DLAM  += -7.486 * z.imag\n//     DS    += -0.66 * z.imag\n//     GAM1C += -0.037 * z.real\n//     SINPI += -0.0086 * z.real\n\n//     # AddSol(-8.096000, -16.350000, -0.740000, 0.091800, 0.000000, 2.000000, 0.000000, -2.000000)\n//     z = ex[2][2] * ex[-2][4]\n//     DLAM  += -8.096 * z.imag\n//     DS    += -16.35 * z.imag\n//     GAM1C += -0.740 * z.real\n//     SINPI += 0.0918 * z.real\n\n//     # AddSol(-5.741000, -0.040000, 0.000000, -0.000900, 0.000000, 0.000000, 2.000000, 2.000000)\n//     z = ex[2][3] * ex[2][4]\n//     DLAM  += -5.741 * z.imag\n//     DS    += -0.04 * z.imag\n//     SINPI += -0.0009 * z.real\n\n//     # AddSol(0.255000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 2.000000, 1.000000)\n//     z = ex[2][3] * ex[1][4]\n//     DLAM  += 0.255 * z.imag\n\n//     # AddSol(-411.608000, -0.200000, 0.000000, -0.012400, 0.000000, 0.000000, 2.000000, 0.000000)\n//     z = ex[2][3]\n//     DLAM  += -411.608 * z.imag\n//     DS    += -0.20 * z.imag\n//     SINPI += -0.0124 * z.real\n\n//     # AddSol(0.584000, 0.840000, 0.000000, 0.007100, 0.000000, 0.000000, 2.000000, -1.000000)\n//     z = ex[2][3] * ex[-1][4]\n//     DLAM  += 0.584 * z.imag\n//     DS    += 0.84 * z.imag\n//     SINPI += 0.0071 * z.real\n\n//     # AddSol(-55.173000, -52.140000, 0.000000, -0.105200, 0.000000, 0.000000, 2.000000, -2.000000)\n//     z = ex[2][3] * ex[-2][4]\n//     DLAM  += -55.173 * z.imag\n//     DS    += -52.14 * z.imag\n//     SINPI += -0.1052 * z.real\n\n//     # AddSol(0.254000, 0.250000, 0.000000, -0.001700, 0.000000, 0.000000, 2.000000, -3.000000)\n//     z = ex[2][3] * ex[-3][4]\n//     DLAM  += 0.254 * z.imag\n//     DS    += 0.25 * z.imag\n//     SINPI += -0.0017 * z.real\n\n//     # AddSol(0.025000, -1.670000, 0.000000, 0.003100, 0.000000, 0.000000, 2.000000, -4.000000)\n//     z = ex[2][3] * ex[-4][4]\n//     DLAM  += 0.025 * z.imag\n//     DS    += -1.67 * z.imag\n//     SINPI += 0.0031 * z.real\n\n//     # AddSol(1.060000, 2.960000, -0.166000, 0.024300, 3.000000, 0.000000, 0.000000, 2.000000)\n//     z = ex[3][1] * ex[2][4]\n//     DLAM  += 1.060 * z.imag\n//     DS    += 2.96 * z.imag\n//     GAM1C += -0.166 * z.real\n//     SINPI += 0.0243 * z.real\n\n//     # AddSol(36.124000, 50.640000, -1.300000, 0.621500, 3.000000, 0.000000, 0.000000, 0.000000)\n//     z = ex[3][1]\n//     DLAM  += 36.124 * z.imag\n//     DS    += 50.64 * z.imag\n//     GAM1C += -1.300 * z.real\n//     SINPI += 0.6215 * z.real\n\n//     # AddSol(-13.193000, -16.400000, 0.258000, -0.118700, 3.000000, 0.000000, 0.000000, -2.000000)\n//     z = ex[3][1] * ex[-2][4]\n//     DLAM  += -13.193 * z.imag\n//     DS    += -16.40 * z.imag\n//     GAM1C += 0.258 * z.real\n//     SINPI += -0.1187 * z.real\n\n//     # AddSol(-1.187000, -0.740000, 0.042000, 0.007400, 3.000000, 0.000000, 0.000000, -4.000000)\n//     z = ex[3][1] * ex[-4][4]\n//     DLAM  += -1.187 * z.imag\n//     DS    += -0.74 * z.imag\n//     GAM1C += 0.042 * z.real\n//     SINPI += 0.0074 * z.real\n\n//     # AddSol(-0.293000, -0.310000, -0.002000, 0.004600, 3.000000, 0.000000, 0.000000, -6.000000)\n//     z = ex[3][1] * ex[-6][4]\n//     DLAM  += -0.293 * z.imag\n//     DS    += -0.31 * z.imag\n//     GAM1C += -0.002 * z.real\n//     SINPI += 0.0046 * z.real\n\n//     # AddSol(-0.290000, -1.450000, 0.116000, -0.005100, 2.000000, 1.000000, 0.000000, 2.000000)\n//     z = ex[2][1] * ex[1][2] * ex[2][4]\n//     DLAM  += -0.290 * z.imag\n//     DS    += -1.45 * z.imag\n//     GAM1C += 0.116 * z.real\n//     SINPI += -0.0051 * z.real\n\n//     # AddSol(-7.649000, -10.560000, 0.259000, -0.103800, 2.000000, 1.000000, 0.000000, 0.000000)\n//     z = ex[2][1] * ex[1][2]\n//     DLAM  += -7.649 * z.imag\n//     DS    += -10.56 * z.imag\n//     GAM1C += 0.259 * z.real\n//     SINPI += -0.1038 * z.real\n\n//     # AddSol(-8.627000, -7.590000, 0.078000, -0.019200, 2.000000, 1.000000, 0.000000, -2.000000)\n//     z = ex[2][1] * ex[1][2] * ex[-2][4]\n//     DLAM  += -8.627 * z.imag\n//     DS    += -7.59 * z.imag\n//     GAM1C += 0.078 * z.real\n//     SINPI += -0.0192 * z.real\n\n//     # AddSol(-2.740000, -2.540000, 0.022000, 0.032400, 2.000000, 1.000000, 0.000000, -4.000000)\n//     z = ex[2][1] * ex[1][2] * ex[-4][4]\n//     DLAM  += -2.740 * z.imag\n//     DS    += -2.54 * z.imag\n//     GAM1C += 0.022 * z.real\n//     SINPI += 0.0324 * z.real\n\n//     # AddSol(1.181000, 3.320000, -0.212000, 0.021300, 2.000000, -1.000000, 0.000000, 2.000000)\n//     z = ex[2][1] * ex[-1][2] * ex[2][4]\n//     DLAM  += 1.181 * z.imag\n//     DS    += 3.32 * z.imag\n//     GAM1C += -0.212 * z.real\n//     SINPI += 0.0213 * z.real\n\n//     # AddSol(9.703000, 11.670000, -0.151000, 0.126800, 2.000000, -1.000000, 0.000000, 0.000000)\n//     z = ex[2][1] * ex[-1][2]\n//     DLAM  += 9.703 * z.imag\n//     DS    += 11.67 * z.imag\n//     GAM1C += -0.151 * z.real\n//     SINPI += 0.1268 * z.real\n\n//     # AddSol(-0.352000, -0.370000, 0.001000, -0.002800, 2.000000, -1.000000, 0.000000, -1.000000)\n//     z = ex[2][1] * ex[-1][2] * ex[-1][4]\n//     DLAM  += -0.352 * z.imag\n//     DS    += -0.37 * z.imag\n//     GAM1C += 0.001 * z.real\n//     SINPI += -0.0028 * z.real\n\n//     # AddSol(-2.494000, -1.170000, -0.003000, -0.001700, 2.000000, -1.000000, 0.000000, -2.000000)\n//     z = ex[2][1] * ex[-1][2] * ex[-2][4]\n//     DLAM  += -2.494 * z.imag\n//     DS    += -1.17 * z.imag\n//     GAM1C += -0.003 * z.real\n//     SINPI += -0.0017 * z.real\n\n//     # AddSol(0.360000, 0.200000, -0.012000, -0.004300, 2.000000, -1.000000, 0.000000, -4.000000)\n//     z = ex[2][1] * ex[-1][2] * ex[-4][4]\n//     DLAM  += 0.360 * z.imag\n//     DS    += 0.20 * z.imag\n//     GAM1C += -0.012 * z.real\n//     SINPI += -0.0043 * z.real\n\n//     # AddSol(-1.167000, -1.250000, 0.008000, -0.010600, 1.000000, 2.000000, 0.000000, 0.000000)\n//     z = ex[1][1] * ex[2][2]\n//     DLAM  += -1.167 * z.imag\n//     DS    += -1.25 * z.imag\n//     GAM1C += 0.008 * z.real\n//     SINPI += -0.0106 * z.real\n\n//     # AddSol(-7.412000, -6.120000, 0.117000, 0.048400, 1.000000, 2.000000, 0.000000, -2.000000)\n//     z = ex[1][1] * ex[2][2] * ex[-2][4]\n//     DLAM  += -7.412 * z.imag\n//     DS    += -6.12 * z.imag\n//     GAM1C += 0.117 * z.real\n//     SINPI += 0.0484 * z.real\n\n//     # AddSol(-0.311000, -0.650000, -0.032000, 0.004400, 1.000000, 2.000000, 0.000000, -4.000000)\n//     z = ex[1][1] * ex[2][2] * ex[-4][4]\n//     DLAM  += -0.311 * z.imag\n//     DS    += -0.65 * z.imag\n//     GAM1C += -0.032 * z.real\n//     SINPI += 0.0044 * z.real\n\n//     # AddSol(0.757000, 1.820000, -0.105000, 0.011200, 1.000000, -2.000000, 0.000000, 2.000000)\n//     z = ex[1][1] * ex[-2][2] * ex[2][4]\n//     DLAM  += 0.757 * z.imag\n//     DS    += 1.82 * z.imag\n//     GAM1C += -0.105 * z.real\n//     SINPI += 0.0112 * z.real\n\n//     # AddSol(2.580000, 2.320000, 0.027000, 0.019600, 1.000000, -2.000000, 0.000000, 0.000000)\n//     z = ex[1][1] * ex[-2][2]\n//     DLAM  += 2.580 * z.imag\n//     DS    += 2.32 * z.imag\n//     GAM1C += 0.027 * z.real\n//     SINPI += 0.0196 * z.real\n\n//     # AddSol(2.533000, 2.400000, -0.014000, -0.021200, 1.000000, -2.000000, 0.000000, -2.000000)\n//     z = ex[1][1] * ex[-2][2] * ex[-2][4]\n//     DLAM  += 2.533 * z.imag\n//     DS    += 2.40 * z.imag\n//     GAM1C += -0.014 * z.real\n//     SINPI += -0.0212 * z.real\n\n//     # AddSol(-0.344000, -0.570000, -0.025000, 0.003600, 0.000000, 3.000000, 0.000000, -2.000000)\n//     z = ex[3][2] * ex[-2][4]\n//     DLAM  += -0.344 * z.imag\n//     DS    += -0.57 * z.imag\n//     GAM1C += -0.025 * z.real\n//     SINPI += 0.0036 * z.real\n\n//     # AddSol(-0.992000, -0.020000, 0.000000, 0.000000, 1.000000, 0.000000, 2.000000, 2.000000)\n//     z = ex[1][1] * ex[2][3] * ex[2][4]\n//     DLAM  += -0.992 * z.imag\n//     DS    += -0.02 * z.imag\n\n//     # AddSol(-45.099000, -0.020000, 0.000000, -0.001000, 1.000000, 0.000000, 2.000000, 0.000000)\n//     z = ex[1][1] * ex[2][3]\n//     DLAM  += -45.099 * z.imag\n//     DS    += -0.02 * z.imag\n//     SINPI += -0.0010 * z.real\n\n//     # AddSol(-0.179000, -9.520000, 0.000000, -0.083300, 1.000000, 0.000000, 2.000000, -2.000000)\n//     z = ex[1][1] * ex[2][3] * ex[-2][4]\n//     DLAM  += -0.179 * z.imag\n//     DS    += -9.52 * z.imag\n//     SINPI += -0.0833 * z.real\n\n//     # AddSol(-0.301000, -0.330000, 0.000000, 0.001400, 1.000000, 0.000000, 2.000000, -4.000000)\n//     z = ex[1][1] * ex[2][3] * ex[-4][4]\n//     DLAM  += -0.301 * z.imag\n//     DS    += -0.33 * z.imag\n//     SINPI += 0.0014 * z.real\n\n//     # AddSol(-6.382000, -3.370000, 0.000000, -0.048100, 1.000000, 0.000000, -2.000000, 2.000000)\n//     z = ex[1][1] * ex[-2][3] * ex[2][4]\n//     DLAM  += -6.382 * z.imag\n//     DS    += -3.37 * z.imag\n//     SINPI += -0.0481 * z.real\n\n//     # AddSol(39.528000, 85.130000, 0.000000, -0.713600, 1.000000, 0.000000, -2.000000, 0.000000)\n//     z = ex[1][1] * ex[-2][3]\n//     DLAM  += 39.528 * z.imag\n//     DS    += 85.13 * z.imag\n//     SINPI += -0.7136 * z.real\n\n//     # AddSol(9.366000, 0.710000, 0.000000, -0.011200, 1.000000, 0.000000, -2.000000, -2.000000)\n//     z = ex[1][1] * ex[-2][3] * ex[-2][4]\n//     DLAM  += 9.366 * z.imag\n//     DS    += 0.71 * z.imag\n//     SINPI += -0.0112 * z.real\n\n//     # AddSol(0.202000, 0.020000, 0.000000, 0.000000, 1.000000, 0.000000, -2.000000, -4.000000)\n//     z = ex[1][1] * ex[-2][3] * ex[-4][4]\n//     DLAM  += 0.202 * z.imag\n//     DS    += 0.02 * z.imag\n\n//     # AddSol(0.415000, 0.100000, 0.000000, 0.001300, 0.000000, 1.000000, 2.000000, 0.000000)\n//     z = ex[1][2] * ex[2][3]\n//     DLAM  += 0.415 * z.imag\n//     DS    += 0.10 * z.imag\n//     SINPI += 0.0013 * z.real\n\n//     # AddSol(-2.152000, -2.260000, 0.000000, -0.006600, 0.000000, 1.000000, 2.000000, -2.000000)\n//     z = ex[1][2] * ex[2][3] * ex[-2][4]\n//     DLAM  += -2.152 * z.imag\n//     DS    += -2.26 * z.imag\n//     SINPI += -0.0066 * z.real\n\n//     # AddSol(-1.440000, -1.300000, 0.000000, 0.001400, 0.000000, 1.000000, -2.000000, 2.000000)\n//     z = ex[1][2] * ex[-2][3] * ex[2][4]\n//     DLAM  += -1.440 * z.imag\n//     DS    += -1.30 * z.imag\n//     SINPI += 0.0014 * z.real\n\n//     # AddSol(0.384000, -0.040000, 0.000000, 0.000000, 0.000000, 1.000000, -2.000000, -2.000000)\n//     z = ex[1][2] * ex[-2][3] * ex[-2][4]\n//     DLAM  += 0.384 * z.imag\n//     DS    += -0.04 * z.imag\n\n//     # AddSol(1.938000, 3.600000, -0.145000, 0.040100, 4.000000, 0.000000, 0.000000, 0.000000)\n//     z = ex[4][1]\n//     DLAM  += 1.938 * z.imag\n//     DS    += 3.60 * z.imag\n//     GAM1C += -0.145 * z.real\n//     SINPI += 0.0401 * z.real\n\n//     # AddSol(-0.952000, -1.580000, 0.052000, -0.013000, 4.000000, 0.000000, 0.000000, -2.000000)\n//     z = ex[4][1] * ex[-2][4]\n//     DLAM  += -0.952 * z.imag\n//     DS    += -1.58 * z.imag\n//     GAM1C += 0.052 * z.real\n//     SINPI += -0.0130 * z.real\n\n//     # AddSol(-0.551000, -0.940000, 0.032000, -0.009700, 3.000000, 1.000000, 0.000000, 0.000000)\n//     z = ex[3][1] * ex[1][2]\n//     DLAM  += -0.551 * z.imag\n//     DS    += -0.94 * z.imag\n//     GAM1C += 0.032 * z.real\n//     SINPI += -0.0097 * z.real\n\n//     # AddSol(-0.482000, -0.570000, 0.005000, -0.004500, 3.000000, 1.000000, 0.000000, -2.000000)\n//     z = ex[3][1] * ex[1][2] * ex[-2][4]\n//     DLAM  += -0.482 * z.imag\n//     DS    += -0.57 * z.imag\n//     GAM1C += 0.005 * z.real\n//     SINPI += -0.0045 * z.real\n\n//     # AddSol(0.681000, 0.960000, -0.026000, 0.011500, 3.000000, -1.000000, 0.000000, 0.000000)\n//     z = ex[3][1] * ex[-1][2]\n//     DLAM  += 0.681 * z.imag\n//     DS    += 0.96 * z.imag\n//     GAM1C += -0.026 * z.real\n//     SINPI += 0.0115 * z.real\n\n//     # AddSol(-0.297000, -0.270000, 0.002000, -0.000900, 2.000000, 2.000000, 0.000000, -2.000000)\n//     z = ex[2][1] * ex[2][2] * ex[-2][4]\n//     DLAM  += -0.297 * z.imag\n//     DS    += -0.27 * z.imag\n//     GAM1C += 0.002 * z.real\n//     SINPI += -0.0009 * z.real\n\n//     # AddSol(0.254000, 0.210000, -0.003000, 0.000000, 2.000000, -2.000000, 0.000000, -2.000000)\n//     z = ex[2][1] * ex[-2][2] * ex[-2][4]\n//     DLAM  += 0.254 * z.imag\n//     DS    += 0.21 * z.imag\n//     GAM1C += -0.003 * z.real\n\n//     # AddSol(-0.250000, -0.220000, 0.004000, 0.001400, 1.000000, 3.000000, 0.000000, -2.000000)\n//     z = ex[1][1] * ex[3][2] * ex[-2][4]\n//     DLAM  += -0.250 * z.imag\n//     DS    += -0.22 * z.imag\n//     GAM1C += 0.004 * z.real\n//     SINPI += 0.0014 * z.real\n\n//     # AddSol(-3.996000, 0.000000, 0.000000, 0.000400, 2.000000, 0.000000, 2.000000, 0.000000)\n//     z = ex[2][1] * ex[2][3]\n//     DLAM  += -3.996 * z.imag\n//     SINPI += 0.0004 * z.real\n\n//     # AddSol(0.557000, -0.750000, 0.000000, -0.009000, 2.000000, 0.000000, 2.000000, -2.000000)\n//     z = ex[2][1] * ex[2][3] * ex[-2][4]\n//     DLAM  += 0.557 * z.imag\n//     DS    += -0.75 * z.imag\n//     SINPI += -0.0090 * z.real\n\n//     # AddSol(-0.459000, -0.380000, 0.000000, -0.005300, 2.000000, 0.000000, -2.000000, 2.000000)\n//     z = ex[2][1] * ex[-2][3] * ex[2][4]\n//     DLAM  += -0.459 * z.imag\n//     DS    += -0.38 * z.imag\n//     SINPI += -0.0053 * z.real\n\n//     # AddSol(-1.298000, 0.740000, 0.000000, 0.000400, 2.000000, 0.000000, -2.000000, 0.000000)\n//     z = ex[2][1] * ex[-2][3]\n//     DLAM  += -1.298 * z.imag\n//     DS    += 0.74 * z.imag\n//     SINPI += 0.0004 * z.real\n\n//     # AddSol(0.538000, 1.140000, 0.000000, -0.014100, 2.000000, 0.000000, -2.000000, -2.000000)\n//     z = ex[2][1] * ex[-2][3] * ex[-2][4]\n//     DLAM  += 0.538 * z.imag\n//     DS    += 1.14 * z.imag\n//     SINPI += -0.0141 * z.real\n\n//     # AddSol(0.263000, 0.020000, 0.000000, 0.000000, 1.000000, 1.000000, 2.000000, 0.000000)\n//     z = ex[1][1] * ex[1][2] * ex[2][3]\n//     DLAM  += 0.263 * z.imag\n//     DS    += 0.02 * z.imag\n\n//     # AddSol(0.426000, 0.070000, 0.000000, -0.000600, 1.000000, 1.000000, -2.000000, -2.000000)\n//     z = ex[1][1] * ex[1][2] * ex[-2][3] * ex[-2][4]\n//     DLAM  += 0.426 * z.imag\n//     DS    += 0.07 * z.imag\n//     SINPI += -0.0006 * z.real\n\n//     # AddSol(-0.304000, 0.030000, 0.000000, 0.000300, 1.000000, -1.000000, 2.000000, 0.000000)\n//     z = ex[1][1] * ex[-1][2] * ex[2][3]\n//     DLAM  += -0.304 * z.imag\n//     DS    += 0.03 * z.imag\n//     SINPI += 0.0003 * z.real\n\n//     # AddSol(-0.372000, -0.190000, 0.000000, -0.002700, 1.000000, -1.000000, -2.000000, 2.000000)\n//     z = ex[1][1] * ex[-1][2] * ex[-2][3] * ex[2][4]\n//     DLAM  += -0.372 * z.imag\n//     DS    += -0.19 * z.imag\n//     SINPI += -0.0027 * z.real\n\n//     # AddSol(0.418000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 4.000000, 0.000000)\n//     z = ex[4][3]\n//     DLAM  += 0.418 * z.imag\n\n//     # AddSol(-0.330000, -0.040000, 0.000000, 0.000000, 3.000000, 0.000000, 2.000000, 0.000000)\n//     z = ex[3][1] * ex[2][3]\n//     DLAM  += -0.330 * z.imag\n//     DS    += -0.04 * z.imag\n\n\n//     def ADDN(coeffn, p, q, r, s):\n//         return coeffn * (ex[p][1] * ex[q][2] * ex[r][3] * ex[s][4]).imag\n\n//     N = 0\n//     N += ADDN(-526.069, 0, 0,1,-2)\n//     N += ADDN(  -3.352, 0, 0,1,-4)\n//     N += ADDN( +44.297,+1, 0,1,-2)\n//     N += ADDN(  -6.000,+1, 0,1,-4)\n//     N += ADDN( +20.599,-1, 0,1, 0)\n//     N += ADDN( -30.598,-1, 0,1,-2)\n//     N += ADDN( -24.649,-2, 0,1, 0)\n//     N += ADDN(  -2.000,-2, 0,1,-2)\n//     N += ADDN( -22.571, 0,+1,1,-2)\n//     N += ADDN( +10.985, 0,-1,1,-2)\n\n//     DLAM += (\n//         +0.82*Sine(0.7736  -62.5512*T)+0.31*Sine(0.0466 -125.1025*T)\n//         +0.35*Sine(0.5785  -25.1042*T)+0.66*Sine(0.4591+1335.8075*T)\n//         +0.64*Sine(0.3130  -91.5680*T)+1.14*Sine(0.1480+1331.2898*T)\n//         +0.21*Sine(0.5918+1056.5859*T)+0.44*Sine(0.5784+1322.8595*T)\n//         +0.24*Sine(0.2275   -5.7374*T)+0.28*Sine(0.2965   +2.6929*T)\n//         +0.33*Sine(0.3132   +6.3368*T)\n//     )\n//     S = F + DS/_ARC\n//     lat_seconds = (1.000002708 + 139.978*DGAM)*(18518.511+1.189+GAM1C)*math.sin(S) - 6.24*math.sin(3*S) + N\n//     return _moonpos(\n//         _PI2 * Frac((L0+DLAM/_ARC) / _PI2),\n//         (math.pi / (180 * 3600)) * lat_seconds,\n//         (_ARC * _EARTH_EQUATORIAL_RADIUS_AU) / (0.999953253 * SINPI)\n//     )"
        }
    ]
}